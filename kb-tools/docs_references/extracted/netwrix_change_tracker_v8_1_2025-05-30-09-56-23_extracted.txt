Netwrix Change Tracker is a system integrity monitoring product, used for compliance programs, host intrusion detection and change control for enterprise IT systems. It is used by Enterprise IT organizations including the military, federal, banks, financial services, airlines, retailers, utilities and not-for-profit organizations globally. The product automates the collection of configuration data from any IT devices, including Servers and Desktops, database systems, firewalls, network routers and switches and stores a baseline for each device. Platforms supported include Windows, Linux, Unix, Oracle, SQL Server. Configuration data collected is then analyzed for compliance with an organizations hardened build standard. This is typically based on a CIS Benchmark hardening checklist or one provided by a manufacturer such as Microsoft, Red Hat, Oracle or Cisco, for example. Compliance standards supported by Change Tracker include PCI DSS, DISA STIG, NERC CIP, ISO 27001, GLBA), FISMA), HIPAA HITECH, S-OX, NIST 800-53/171 and GPG 13. Devices are then monitored continuously using either a Change Tracker Agent installed directly onto the device, or using a periodically scheduled agentless interaction with the device. Any changes recorded deviating from the initial baseline are assessed for a match with Planned Changes configured in the Change Tracker system. Planned Change rules can be recorded directly from a device exhibiting changes, for example, when pre-staging patches, or from observed changes reported by Change Tracker. Planned Changes comprise the devices to assess, change window and details of the changes to match, such as a file change or registry value, for example. This Closed-Loop, Intelligent Change Control closely aligns to COBIT or ITIL Change Control processes whereby changes are pre-approved via a ‘Request For Change’ process, then reviewed for accuracy and quality via a QA Testing or Post-implementation review. Netwrix o ffer a ServiceNow Certified ITSM Integration Module to automatically pull in Change Requests from v8.1 most leading ITSM products. In this way, Change Tracker automates the entire process by reviewing changes observed against pre-defined Planned Change rules, or by retrospectively building new Planned Change Rules based on observed changes, hence the Closed-Loop terminology. Any changes recorded that are not matched by a Planned Change rule are reported as being potentially breach activity. In this way, Change Tracker provides a Host Intrusion Detection System capability. Netwrix Change Tracker have been awarded Security Software Certification for CIS Benchmarks. Other Netwrix products have also received several rewards including a series of Five Star reviews from SC Magazine and a Winners Award from Computer Defense Magazine. Netwrix is also an official OVAL Adopter utilizing OVAL vulnerability and inventory and compliance content in either SCAP or xccdf content. Solution Architecture Netwrix Change Tracker is delivered as a 100% software solution. The central server component can be installed on either a Windows or Linux platform. A virtual host is supported but resources, and in particular disk I/O performance, are critical. For more information please see: Installing Gen 7 Agent for Windows Installing Gen 7 Agent for Linux v8.1 For a full list of supported operating systems see OS Support Matrix. Administration and everyday usage for reporting on the change history of a device and managing planned changes is all provided via the secure web interface. Integration options include alert propagation via syslog and email, and for more advanced, two-way integration, Netwrix Change Tracker provides a REST API. Windows Servers and Workstations are tracked using a locally installed active Agent; Solaris, Ubuntu, SUSE Linux, RedHat and CentOS hosts can also be tracked using an Agent; Legacy Unix systems are monitored for File Integrity changes using the Express Agent; Network devices, Unix and Linux Servers are also tracked using an agentless, scripted interaction executed automatically from the Change Tracker server or using a Proxy Agent function; Detailed Configuration Policy management for Servers and Workstations and Policy Compliance Reporting is performed via Change Tracker Hub. Getting Started Once you have successfully installed Netwrix Change Tracker, and logged in for the first time (see 2FA section below), you can start putting it to work. Change Tracker can collect data for the reports with or without agents. By default, an agent is installed on the Change Tracker machine, v8.1 so you can quickly check the data collection and reports using that agent. Alternatively, you can collect data from other devices in your network. Either way, your starting point will be the Device Tab. Once you have established data collection, use the Reports tab to view reports on you device's configuration. Next, use the Planned Changes Tab manage change events and filter any changes that are considered as noise. To add another user, manage licenses, set the planned change intervals, and otherwise configure Change Tracker, review the Settings Tab. Two Factor Authentication Sign in as the root "admin" account and follow the instructions to register Change Tracker with an authenticator app on your mobile device. Once registered with your authenticator app, use it to provide a One-Time Passcode (OTP) to complete the 2FA registration. A One-Time Passcode (OTP) must now be provided during the sign in process. 2FA is highly recommended, but it is possible to be disabled. Clearing the "2FA login" checkbox against the User account in the User Admin page will disable 2FA for the user. If a One-Time Passcode (OTP) is not provided during the sign in process, one may be required when attempting certain actions within Change Tracker for the first time during a session. If the root admin user is NOT able to use an authenticator app for 2FA on the first login, then set the following configuration settings in the C:\inetpub\wwwroot\Change Tracker Generation 7 (NetCore) Hub\Configs\appsettings.json file as shown: security > auth > twoFactor > "registerAdmin": "false" security > auth > twoFactor > "fallbackEnabled": "true" (default setting) v8.1 A One-Time Passcode (OTP) may be required when attempting certain actions within Change Tracker for the first time during a session. Without 2FA or an authenticator app, this OTP will be written to the application log file (C:\inetpub\wwwroot\Change Tracker Generation 7 (NetCore) Hub\logs\hubservice-log.txt) which is only accessible by local admins. What's New New Netwrix Community! All Netwrix product announcements have moved to the new Netwrix Community. See announcements for Change Tracker in the Change Tracker area of our new community. Table 1: Version Release Date EOS Date 7.2 17 Apr 2025 7.1 29 Jan 2024 7.0.1 1 30 Apr 2022 1 Nov 2025 7.0.0 22 Jul 2016 1 Oct 2024 v8.1 Component Releases The components listed here are versioned independently of the Hub, therefor each has it's own life cycle. End of Support (EOS) Policy Netwrix will provide full support for a minimum of two versions. With the release of each new software version, Netwrix will publish the End-of-Support (EOS) date for the version entering end of support as part of the release notification. Once an EOS date has been published, that EOS software version will enter limited support and will have six months until support ceases. The EOS for a software version applies to that version and all hot fixes and service packs issued for that version. Gen 7 Agent Versions Version Release Date EOS Date 7.2 17 Apr 2025 7.1 29 Jan 2024 7.0.1 1 30 Apr 2022 1 Nov 2025 7.0.0 22 Jul 2016 1 Oct 2024 Table 1: Version Release Date EOS Date 2.1 12 Apr 2024 2.0.1 1 Feb 2018 2.0.0 29 Jun 2017 1 Oct 2024 Table 2: Version Release Date EOS Date 2.2 17 Apr 2025 2.1 1 Jun 2024 2.0.4 3 May 2023 1 Nov 2025 2.0.3 8 Nov 2022 1 Oct 2024 v8.1 Express Agent Versions Version Release Date EOS Date 2.1 12 Apr 2024 2.0.1 1 Feb 2018 2.0.0 29 Jun 2017 1 Oct 2024 Sync Service Versions Version Release Date EOS Date 2.2 17 Apr 2025 2.1 1 Jun 2024 2.0.4 3 May 2023 1 Nov 2025 2.0.3 8 Nov 2022 1 Oct 2024 Table 1: Windows Oper ating Systems Supported Change Tracker Management Software Change Tracker Agent Express Agent Change Tracker Agentless Windows 10 YES YES YES Windows 11 YES YES YES Windows Server 2025 YES YES YES YES v8.1 Requirements Review the following for additional information: OS Support Matrix Agent and Device Ports Hub Installation for Windows Gen 7 Agent for Windows Gen 7 Agent for Linux Express Agent OS Support Matrix This page lists the platforms and use cases that Netwrix has verified. However, the Express Agent may work on other platforms that have gcc (4.8+) compiler available. Windows Operating Systems The versions below cover Standard and Datacenter editions, plus the server core installation option. Windows Change Tracker Oper ating Change Tracker Change Tracker Management Express Agent Systems Agent Agentless Software Supported Windows 10 YES YES YES Windows 11 YES YES YES Windows Server YES YES YES YES Table 1: Windows Oper ating Systems Supported Change Tracker Management Software Change Tracker Agent Express Agent Change Tracker Agentless Windows Server 2022 YES YES YES YES Windows Server 2019 YES YES YES YES Windows Server 2016 YES YES YES YES Table 2: Linux (RedHat Based) Change Tracker Management Software Change Tracker Agent Express Agent Change Tracker Agentless CentOS 7+ YES* YES YES RHEL 7+ YES* YES YES Fedora 39+ YES* YES YES v8.1 Windows Change Tracker Oper ating Change Tracker Change Tracker Management Express Agent Systems Agent Agentless Software Supported Windows Server YES YES YES YES Windows Server YES YES YES YES Windows Server YES YES YES YES Linux (RedHat Based) Operating Systems This table assumes Intel/AMD x64 architecture. Express Agent is also available on 32 bit and s390x architectures upon request. Change Tracker Linux (RedHat Change Tracker Change Tracker Management Express Agent Based) Agent Agentless Software CentOS 7+ YES* YES YES RHEL 7+ YES* YES YES Fedora 39+ YES* YES YES Table 1: Linux (RedHat Based) Change Tracker Management Software Change Tracker Agent Express Agent Change Tracker Agentless Oracle Linux 7+ YES* YES YES Rocky Linux 8+ YES* YES YES Table 2: Linux (Debian Based) Change Tracker Management Software Change Tracker Agent Express Agent Change Tracker Agentless Debian 10+ YES YES YES Ubuntu 16.04+ YES YES YES Raspberry Pi OS (Debian) 10+ YES YES v8.1 Change Tracker Linux (RedHat Change Tracker Change Tracker Management Express Agent Based) Agent Agentless Software Oracle Linux 7+ YES* YES YES Rocky Linux 8+ YES* YES YES v7.1.4 of the agent, later versions are not supported on these legacy OS releases. Linux (Debian Based) Operating Systems This table assumes Intel/AMD x64 architecture. Express Agent is also available on 32 bit and s390x architectures upon request. Change Tracker Change Tracker Linux (Debian Change Tracker Management Express Agent Based) Agent Software Agentless Debian 10+ YES YES YES Ubuntu 16.04+ YES YES YES Raspberry Pi OS YES YES (Debian) 10+ Table 1: Other Linux Change Tracker Agent Express Agent Change Tracker Agentless SUSE Linux Enterprise 12+ YES YES YES openSUSE 15+ YES YES YES Alpine Linux 3.17+ YES YES YES Table 2: Other platforms Change Tracker Agent Express Agent Change Tracker Agentless Solaris 11, 10 YES YES AIX 7.3, 7.2 YES YES v8.1 Other Linux Operating Systems This table assumes Intel/AMD x64 architecture. Express Agent is also available on 32 bit and s390x. architectures upon request. Change Tracker Other Linux Change Tracker Agent Express Agent Agentless SUSE Linux Enterprise 12+ YES YES YES openSUSE 15+ YES YES YES Alpine Linux 3.17+ YES YES YES Other Platforms Change Tracker Other platforms Change Tracker Agent Express Agent Agentless Solaris 11, 10 YES YES AIX 7.3, 7.2 YES YES Table 1: Other platforms Change Tracker Agent Express Agent Change Tracker Agentless HPUX 11i v3 YES Mac OS 12+ YES YES YES ESXi 7+ YES Table 2: Network Devices Change Tracker Agent Express Agent Change Tracker Agentless CheckPoint Firewall YES Cisco IOS YES Cisco Switch YES v8.1 Change Tracker Other platforms Change Tracker Agent Express Agent Agentless HPUX 11i v3 YES Mac OS 12+ YES YES YES ESXi 7+ YES Network Devices Change Tracker collects each device's OS version, startup/running config and the user list to track any changes over time. Change Tracker Network Devices Change Tracker Agent Express Agent Agentless CheckPoint Firewall YES Cisco IOS YES Cisco Switch YES Table 1: Network Devices Change Tracker Agent Express Agent Change Tracker Agentless Cisco Firewall YES Dell N-Series Switch YES Dell E-S-C Series Router YES F5 YES HP Switch YES Juniper Switch YES Palo Alto Firewall YES Sonicwall Firewall YES v8.1 Change Tracker Network Devices Change Tracker Agent Express Agent Agentless Cisco Firewall YES Dell N-Series Switch YES Dell E-S-C Series Router YES F5 YES HP Switch YES Juniper Switch YES Palo Alto Firewall YES Sonicwall Firewall YES Agent and Device Ports Although custom ports can be set in the agent's configuration files, the following are the default and recommended ports: v8.1 Change Tracker Console Port: 443 OR Custom HTTPS Communication to the Change Tracker Console is by default HTTPS onport 443. This can be adjusted within IIS if other ports are deemed more suitable. Change Tracker Agents – Windows & Linux Port: 443 OR Custom HTTPS Communication between Change Tracker and the agent is controlled by the agent's HUBURL, defined during installation. The HUBURL will resemble https:// MY_CT_SERVER/api/. The communication is one-way and will always be initiated by the agent. Change Tracker - Agentless Linux Port: 22 TCP/SSH One-way communication is initiated from the Change Tracker Proxy Agent (The proxy agent is collocated with Change Tracker but can be installed on a separate system). Change Tracker - Agentless Windows Port: 445 One-way communication is initiated from the Change Tracker Proxy Agent (The proxy agent is collocated with Change Tracker but can be installed on a separate system) to the Remote Registry Service on the Windows devices. Network Devices Eg: Routers, switches or firewalls Table 1: Standard Install (< 100 devices) Large Install (~ 1k devices) CPU 4 cores 16 cores RAM 8 GB 32 GB Disk 500GB 5TB v8.1 ◦◦ Port: 22 TCP/SSH One-way communication is initiated from the Change Tracker Proxy Agent (The proxy agent is collocated with Change Tracker but can be installed on a separate system). ◦◦ Port: 23 TCP/Telnet One-way communication is initiated from the Change Tracker Proxy Agent (The proxy agent is collocated with Change Tracker but can be installed on a separate system). Hub Installation for Windows This topic lists the hardware requirements and software requirements for Netwrix Change Tracker. Hardware Requirements Standard Install (< 100 devices) Large Install (~ 1k devices) CPU 4 cores 16 cores RAM 8 GB 32 GB Disk 500GB 5TB Software Requirements Operating System – Windows Server 2022 v8.0 v10.0 v8.1 ◦◦ Server roles: v8.0 v8.1 Redis ◦◦ If a single instance of Change Tracker is installed and the organizations licensed for more than 1500 devices, Redis should be deployed and configured as part of the applications architecture. ◦◦ If a clustered installation of Change Tracker is planned, i.e. more than one instance of Change Tracker is installed, Redis should be deployed and configured as part of the applications architecture. ◦◦ Redis should be deployed onto a dedicated system running on Linux (CentOS/RHEL for example). Please contact support for further information on required system specification and network traffic requirements. On older versions of Windows, for example Windows Server 2012 R2, install the Visual Studio C++ 2015, 2017, 2019 Redistributable. ◦◦ Otherwise, a confusing error message in the Windows Event Log reports that The data is the error. Disk space based on limited trial implementations only. For production, we size based on an average of 4GB per device, per annum, based on typical change event and report volumes (4 Compliance Reports per month, 200 change events per month) See the Installation topic for additional information on the installation process. Please run a Windows Update to ensure all above components are fully up to date. Gen 7 Agent for Windows Requirements The Gen 7 agent has no dependencies on Windows operating systems. Gen 7 Agent for Linux Requirements The Gen 7 agent's dependencies for Linux devices are: libicu Sysdig to capture Who Made The Change data. The Gen 7 agent will work without it, but will not be able to capture the names of the users who are modifying files. v8.1 Express Agent Requirements The Express agent is a single binary less than 10MBs in size and capable of running on any operating system with zero dependencies. v8.1 Installation Review the following for additional information: Requirements Hub Installation for Windows Installing Gen 7 Agent for Windows Installing Gen 7 Agent for Linux Scripted/Command Line Use of Gen 7 Agent EXE Installer Hub NOTE: Ensure the Hub's requirements are met and that the server has had any OS updates applied and has been restarted. See the Hub Installation for Windows topic for additional information. A crucial decision to make before installing Change Tracker is how to have Change Tracker store it's data. Change Tracker uses the MongoDB database to store all of it's event data and configuration. The most common approach (and the default) is to run the installer and allow it to install the version of MongoDB that is shipped with it. This will be the latest patch to the latest Long Term Support (LTS) version of the community edition of MongoDB. This edition of MongoDB lacks many of the features available in the Enterprise edition as described in MongoDB's Upgrade MongoDB Community to MongoDB Enterprise article. Change Tracker can also be configured to use and existing instance of MongoDB instead of the bundled community edition. This is useful if any of the following are required or desirable: MongoDB Enterprise Edition A clustered install of MongoDB Full control of the MongoDB installation CAUTION: No matter the edition of MongoDB or where it is installed, regular patching and backups must be planned and managed. v8.1 Installation The installer can be downloaded from the customer portal. The installer employes a wizard to enable configuration of the installation. Running a later version of the installer on a server that already has a Change Tracker Hub installed will update the installation. Step 1 – Accept the End User License Agreement to start the installation. v8.1 Step 2 – Enter the web server ports. v8.1 Step 3 – Enter a password for the SSL certificate's private key. v8.1 Step 4 – Define an existing MongoDB instance to use or leave the MongoDB server field as localhost to have the installer deploy it's built-in version of MongoDB Community edition. v8.1 Step 5 – Define the path to store the MongoDB log. v8.1 Step 6 – Most installations can leave this blank, but if a clustered installation is planned, enter the address of the required Redis server. v8.1 Step 7 – Select the installation path for Change Tracker. CAUTION: Changing this is only recommended for advanced installations. v8.1 Step 8 – Once the installation is complete set a strong password for the Admin user. It should now be possible to log into the console from a browser. MongoDB Configuration Review the following for additional information: Linux Windows Linux By default the Netwrix Change Tracker database resides on the /var/lib/mongo path. A typical installation will look like the below: v8.1 # cd /var/lib/mongo # ls journal mongod.lock NNTHubService.2 NNTHubService.5 NNTHubService.ns local.0 NNTHubService.0 NNTHubService.3 NNTHubService.6 local.ns NNTHubService.1 NNTHubService.4 NNTHubService.7 The minimum requirement for Netwrix Change Tracker implementation is 10GB free space for the volume supporting /var/lib. Modify Database Storage Path Prior to Installation of Change Tracker If you prefer database files to be written to a different path/volume then it is best to carry out the following procedure instead of using the standard nnthubservice.rpm installer package. You can install mongo first and alter the dbpath parameter before installing the rest of the system if you wish - it s probably best setup as early as possible to prevent the large files being created. # yum install mongodb-org Should install just mongo at which point you can tweak the parameters as required before proceeding with the rest of the installation. First stop any mongo processes: # service mongod stop Create the folder for the data to be moved to: # mkdir -p /opt/mongod/data Then edit the mongod config file. # vi /etc/mongod.conf and look for the entry: dbpath=/var/lib/mongo and change it to: v8.1 dbpath=/opt/mongod/data Finally, restart the database using: # service mongod start Modify the Database Storage Path after Installing the Product Remember, if SELinux is enabled then please copy the directory created by the install to the new location. The copy command (example below), will take all the SELinux labelling with the copied directory. # cp -avr /var/lib/mongo/ /secondpartition/ Stop the hub and mongo services: # service nnthubservice stop # service mongod stop Create the folder for the data to be moved to: # mkdir -p /opt/mongod/data Move the data files into the new folder: # cd /opt/mongod/data/ # mv /var/lib/mongo/* Remove the old folder: # rmdir /var/lib/mongo Change the config to point to the new folder: # vi /etc/mongod.conf Then look for the entry: dbpath=/var/lib/mongo And change it to: v8.1 dbpath=/opt/mongod/data Restart mongo and the hub: # service mongod start # service nnhubservice start In addition it is possible to ask mongo to use smaller files on disk-space constrained systems. In the mongod.conf file you can add a further parameter: smallfiles=true Windows To change the DB location or to switch to ‘smallfiles’ operation, do the following: Step 1 – Stop the IIS Web server using command line iisreset /stop or use the IIS Management Console, or Windows Services Console. Step 2 – Stop the Mongo DB service using the Windows Services Console. Step 3 – Edit the mongod.conf file located in C:\Program Files\NNT Change Tracker™ Suite\Gen7\MongoDB\conf Step 4 – Edit the parameters for dbpath to change the location for DB files. If you prefer to invoke ‘smallfiles’ operation then add the config line as below. 55.. Then start the Mongod service, followed by an iisreset /start. v8.1 Agent Installation Review the following for additional information: Installing Gen 7 Agent for Windows Scripted/Command Line Use of Gen 7 Agent EXE Installer Installing Gen 7 Agent for Linux Installing Express Agent for Solaris (SPARC and Intel) Installing Express Agent for AIX Agent First Run Express Agent Troubleshooting HubDetails.xml File Rolling Log File Installing Gen 7 Agent for Windows The Hub API page must be entered together with Access Credentials. By default the Agent username is ‘agent’ with password ‘passWord121’ but these can be changed. See the Users: User Administration topic for additional information. v8.1 By default the Agent will register using the Name of the server but there is an opportunity to customize this during installation or post-installation via an edit of the Hub Details file. See the First Run – HubDetails.xml File topic for additional information. RECOMMENDED: During installation, this can also be performed on the Advanced Configuration step of the installation, and there is also an option to test agent connectivity. v8.1 v8.1 NOTE: In order to maximize performance, Gen 7 Agent operational files are located in %PROGRAMDATA%\NNT\gen7agent.service, similarly if you are ever required to provide the rolling-log.txt file to Netwrix Support this is where it is located. See the First Run – HubDetails.xml File topic for additional information on downloading the .xml file for agents. Run the Agent UI. See the Agent First Run topic for additional information. Scripted/Command Line Use of Gen 7 Agent EXE Installer By co-locating a pre-configured HubDetails.xml file in the same folder as the Gen 7 Agent installer these details will be used by the installer for the installed agent. Use of the /SP- /VERYSILENT /SUPPRESSMSGBOXES switches will ensure the installation is silent and operates unattended. C:\Users\Administrator\Downloads>dir Volume in drive C has no label. Volume Serial Number is 3092-7141 Directory of C:\Users\Administrator\Downloads v8.1 03/03/2017 15:03 <DIR> . 03/03/2017 15:03 <DIR> .. 03/03/2017 13:35 462 HubDetails.xml 24/02/2017 17:14 19,110,240 nnt-changeTracker™- gen7agent-7.0.0.15-68.exe 2 File(s) 19,110,702 bytes 2 Dir(s) 4,802,424,832 bytes free C:\Users\Administrator\Downloads>nnt-changeTracker™- gen7agent-7.0.0.15-68.exe /SP- /VERYSILENT /SUPPRESSMSGBOXES Alternatively, a full command line installation can be used, with individual arguments used to specify HubDetails settings. For example: C:\Users\Administrator\Downloads>nnt-changeTracker™- gen7agent-7.0.0.15-68.exe /UseNewHub=true /HUBURL=https:// 192.168.1.107/api /NamePrefix=GenVii- /HUBUSER=agent / HUBPASSWORD=passWord121 /SP- /VERYSILENT /SUPPRESSMSGBOXES You can also use these parameters in the command line: NameSuffix, Thumbprint, Proxy, ProxyDomain, ProxyUser, ProxyPassword. NOTE: These parameters are not case sensitive. For more information on the HubDetails.xml nodes and settings see the First Run – HubDetails.xml File topic for additional information. Installing Gen 7 Agent for Linux Using Local RPM Files Gen 7 Agent can also be installed on Linux and Unix platforms. Installation simply requires the Gen7 Agent RPM to be installed as follows: v8.1 [root@CentOS-6 tmp]# rpm -ivh nnt-changetrackergen7agentcore-7.0.1.9-252.noarch.rpm Once installed, the HubDetails.xml file must be configured – this can be done directly by editing a HubDetails.xml on the /var/nnt/gen7agent.app.netcore path or by using the / opt/nnt/gen7agentcore/configure-gen7agentcore.sh script. Configuring Gen7 Agent service... Setting file ownership... =========================================================================== Gen7 Agent install complete. Now run /opt/nnt/gen7agentcore/configure-gen7agent.sh to complete installation. =========================================================================== ================================================================= The Gen7 Agent will be configured with the following settings : Hub URL : https://192.168.1.107/api Agent user : agent Agent password : <hidden> Agent path : /opt/nnt/gen7agentcore/bin Agent prefix : GenVIIAgent suffix : Agent thumbprint : ================================================================= The Agent service can then be started using the following command; [root@CentOS-6 tmp]# /sbin/service gen7agentcore start v8.1 Starting NNT Gen7 Agent : [root@CentOS-6 tmp]# [ OK ] Scripted Installation of Gen 7 Agent RPM Installer The entire process outlined above can be completed using a single command as follows: [root@CentOS-6 tmp]# rpm -ivh nnt-changetrackergen7agentcore-7.0.1.9-252.noarch.rpm ; /opt/nnt/gen7agentcore/configuregen7agentcore.sh https://192.168.1.107/api agent passWord121 /opt/nnt/ agent/bin GenVII- ; /sbin/service nntgen7agent start NOTE: Remove rpm -evv nnt-changetracker-gen7agentcore-7.0.1.9-252.noarch For Debian Linux Netwrix provides packages for Debian distributions so please download the relevant Gen 7 Agent package then install using: # dpkg -i nnt-changetracker-gen7agentcore_7.0.1.8-261_all.deb You can then use the same steps for configuring your HubDetails.xml file as in the previous section. NOTE: To uninstall the Gen 7 Agent on Debian, use: # apt-get remove nnt-gen7agentcore You’ll then want to remove the Gen 7 Agent files which will be found at: # rm -fr /etc/systemd/system/nntgen7agentcore.service # rm -fr /opt/nnt For Mac OSX # sudo installer -pkg /tmp/nnt-gen7agentcore-7.0.0.19-34-x64.pkg -target / v8.1 NOTE: To uninstall the Gen 7 Agent on MACOSX, use the following command: sudo pkgutil --forget nnt-gen7agentcore-7.0.0.19-34-x64.pkg You’ll then want to remove the Gen 7 Agent files which will be found at: # rm -fr /var/nnt # rm -fr /opt/nnt Run the Agent UI. See the Agent First Run topic for additional information. Installing Express Agent for Solaris (SPARC and Intel) The Change Tracker Express Agent is a reduced feature but ultra-portable Agent provided for use on any platform where support for .NET (and Mono) is not provided. Unlike the standard Gen 7 agent, the Express Agent does not require a .NET/Mono runtime. The Express Agent is provided as an pkg package, downloaded from NNT Members Area and installed using pkg commands. # pkgadd -ivh nnt-changetracker-expressagent-2.0.1.3-25.ppc.pkg Once the package is installed the HubDetails.xml can be created using a configuration script. The configure-expressagent.sh and is found within the installation directory - /opt/nnt/ expressagent. # bash /opt/nnt/expressagent/configure-expressagent.sh Welcome to the NNT ChangeTracker Express Agent Configuration script Hub URL [https://localhost/api/] : https://IPADDRESS-SERVERNAME:PORT/api/ Agent username [agent] : agent Agent password : passWord121 Agent config path [/var/nnt/expressagent] : /var/nnt/expressagent ================================================================== The Express Agent will be configured with the following settings : Hub URL : https://localhost/api/ v8.1 Agent user : agent Agent password : <hidden> Config path : /var/nnt/expressagent ================================================================== The script will also start the agent service. If the agent server is able to communicate with Change Tracker over the desired HTTP/HTTPS port, the agent will register and display as a new device in the hub. The agent will be installed into /opt/nnt/expressagent. HubDetails, log and database files will be stored in var/nnt/expressagent. To start and stop the service manually, use the following commands: # /etc/rc.d/rc2.d/Snntexpressagent.sh start # /etc/rc.d/rc2.d/Knntexpressagent.sh stop Scripted Installation of Gen 7 Express Agent PKG Installer As with all other agents, the installation process can be scripted. # bash /opt/nnt/expressagent/configure-expressagent.sh https://IPADDRESSSERVERNAME:PORT/api/ agent passWord121 /var/nnt/expressagent Run the Agent UI. See the Agent First Run topic for additional information. Installing Express Agent for AIX Note: In order for the Change Tracker Express Agent for AIX to identify the who made the change (WMTC) information for detected file changes, the AIX® Event Infrastructure must be installed and configured. Directions for the installation of the AIX® Event Infrastructure can be found in the following IBM’s article: Setting up the AIX Event Infrastructure. In summary the AIX® Event Infrastructure installed and configured using the below steps. Step 1 – . Install the bos.ahafs fileset. Step 2 – Create the directory for the desired mount point. Step 3 – Run the following command: v8.1 mount –v ahafs <mount point> <mount point> Example: # mkdir /aha # mount -v ahafs /aha /aha Unlike the standard Gen 7 agent, the Express Agent does not require a .NET/Mono runtime. The Express Agent is provided as an rpm package, downloaded from NNT Members Area and installed using rpm commands. # rpm -ivh nnt-changetracker-expressagent-2.0.1.3-25.ppc.rpm Once the package is installed the HubDetails.xml can be created using a configuration script. The configure-expressagent.sh and is found within the installation directory: /opt/nnt/ expressagent. # bash /opt/nnt/expressagent/configure-expressagent.sh Welcome to the NNT ChangeTracker Express Agent Configuration script Hub URL [https://localhost/api/] : https://IPADDRESS-SERVERNAME:PORT/api/ Agent username [agent] : agent Agent password : passWord121 Agent config path [/var/nnt/expressagent] : /var/nnt/expressagent The Express Agent will be configured with the following settings : Hub URL : https://localhost/api/ Agent user : agent Agent password : <hidden> Config path : /var/nnt/expressagent The script will also start the agent service. If the agent server is able to communicate with Change Tracker over the desired HTTP/HTTPS port, the agent will register and display as a new device in the hub. The agent will be installed into /opt/nnt/expressagent. HubDetails, log and database files will be stored in var/nnt/expressagent. To start and stop the service manually, use the following commands: v8.1 # /etc/rc.d/rc2.d/Snntexpressagent.sh start # /etc/rc.d/rc2.d/Knntexpressagent.sh stop Scripted Installation of Express Agent RPM Installer As with all other agents, the installation process can be scripted. # bash /opt/nnt/expressagent/configure-expressagent.sh https://IPADDRESSSERVERNAME:PORT/api/ agent passWord121 /var/nnt/expressagent Run the Agent UI. See the Agent First Run topic for additional information. Upgrade from Agent App to Gen 7 Agent If you are currently using an Agent App (Version 1.0.0.x) and you wish to upgrade to use the Gen 7 Agent instead, the procedure is straightforward but as with any software upgrade, there may be additional steps required depending on your individual circumstances. The high-level overview of upgrading agents in Gen 7: Step 1 – Stop Agent App service (you may choose to uninstall the program at this stage). Step 2 – Run installer for Gen 7 Agent to install. Hub details, Agent username and password are required; Thumbprint may be required if using a private certificate on your Hub server. CAUTION: Do not set either a Nameprefix or Namesuffix for the Agent name – if the Gen 7 Agent registers with the same Host Name as the Agent App is using, the Gen 7 Agent will simply assume the identity of the Agent App and therefore event and report continuity will be ensured. Step 3 – Once the Gen 7 Agent is operational you can then remove the Agent App (if you didn’t already do this in step 1). Step 4 – Stop the NNT Agent App Service. For Windows – Either use the MS Services Console Run > services.msc or use Command Line as Administrator: sc stop NNTAgentService v8.1 For Linux – Use: service nntagent stop Step 5 – Install Gen 7 Agent. Review the following for additional information: Windows – See the Gen 7 Agent for Windows topic for additional information. Linux – See the Installing Gen 7 Agent for Linux topic for additional information. Step 6 – Uninstall old Agent App. Windows – Using NNTAgent.exe from command line: C:\Windows\system32&gt; C:\ProgramData\{2443C4AAA2DC-4926-9D6B-2D3D8AAE6006}\NNTAgent.exe /s MODIFY=FALSE REMOVE=TRUE UNINSTALL=YES Linux – from terminal: rpm -ev nnt-mono nnt-agent Debian - from terminal: # apt-get remove nnt-agent # apt-get remove nnt-mono You’ll then want to remove the Gen 7 Agent files which will be found at: # rm -fr /opt/nnt # rm -fr /opt/mono MAC OSX – from terminal: v8.1 sudo pkgutil –-forget MonoFrameworkMDK-4.6.1.3.macos10.xamarin.universal.pkg sudo pkgutil --forget nnt-gen7agent-7.0.0.19-34-x64.pkg You’ll then want to remove the Gen 7 Agent files which will be found at: # rm -fr /var/nnt # rm -fr /opt/nnt # rm -fr /opt/mono NOTE: Please contact Netwrix Support if you need help at any stage or if you are experiencing issues. Agent First Run A local UI for the Gen 7 Agent provides visibility of operation for troubleshooting purposes. It is available from the hosting platform e.g. http://localhost:8096 and requires credentials of username 'admin' and password 'password'. v8.1 Common Troubleshooting Tips Permission Denied Check file permissions, especially execute permissions for the user account to be used by the Netwrix Change Tracker Proxy Agent. [root@IP141-Oracle-Linux-7 ~]# NNT_FILEHASH_LINUX_X64 bash: /usr/bin/NNT_FILEHASH_LINUX_X64: Permission denied [root@IP141-Oracle-Linux-7 ~]# v8.1 No File or Directory Check that the NNT_Filehash has been placed on a path for the user account being used. Use $PATH to show the path variable settings for the user account. You can modify the user path by creating a custom.sh shell script in /etc/profile.d/ or by modifying /etc/bashrc or /etc/profile but reference the appropriate guidance for your platform OS. [root@IP141-Oracle-Linux-7 ~]# NNT_FILEHASH_LINUX_X64 bash: /usr/bin/NNT_FILEHASH_LINUX_X64: No such file or directory [root@IP141-Oracle-Linux-7 ~]# Error While Loading Shared Libraries Suggests there may be missing dependencies or required libs are not on an executable path for the user account being used. [[root@IP141-Oracle-Linux-7 ~]# NNT_FILEHASH_LINUX_X64 NNT_FILEHASH_LINUX_X64: error while loading shared libraries: libstdc+ +.so.6: cannot open shared object file: No such file or directory [root@IP141-Oracle-Linux-7 ~]# Check dependencies of NNT Filehash using a ldd NNT_FILEHASH_LINUX_X64 [root@IP141-Oracle-Linux-7 bin]# ldd NNT_FILEHASH_LINUX_X64 linux-vdso.so.1 => (0x00007ffdca7f1000) libstdc++.so.6 => not found libm.so.6 => /lib64/libm.so.6 (0x00007ff4efd3a000) libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007ff4efb24000) libc.so.6 => /lib64/libc.so.6 (0x00007ff4ef762000) /lib64/ld-linux-x86-64.so.2 (0x000055e3dd177000) Here the libstdc++.so.6 file is reported as ‘not found’, while all other dependencies have been located OK. v8.1 Check if libstdc++.* is present on the platform to be monitored using command find / name libstdc++.* If the file is located then it will be necessary to either copy the file to the standard default path, e.g. /usr/bin, or at least create a link from the path to the file If the libstdc file is not located on this host, please run the find command on any other similar servers, especially any with compiler capabilities. If located, please take a copy of the file, move it to all other servers and place it on the /usr/bin path if libstdc++ does not exist anywhere within your server estate, then it will be necessary to get the binary from the Manufacturer repo or contact Netwrix Support Express Agent Troubleshooting If you experience problem with the Express Agent then please sent the express agent log fi les found in /var/nnt/expressagent to Netwrix Support. There are also a few simple checks that can be done to aid troubleshooting. Check that all the agent’s dependencies are present using the ldd command: # ldd /opt/nnt/expressagent/expressAgent /opt/nnt/expressagent/expressAgent needs: /usr/lib/libc.a(shr.o) /usr/lib/libpthread.a(shr_xpg5.o) /opt/freeware/lib/gcc/powerpc-ibm-aix6.1.0.0/4.8.5/../../../ libcrypto.a(libcrypto.so.1.0.2) /usr/lib/libpthread.a(shr_comm.o) /opt/freeware/lib/gcc/powerpc-ibm-aix6.1.0.0/4.8.5/../../../ libssl.a(libssl.so.1.0.2) /unix /usr/lib/libcrypt.a(shr.o) /usr/lib/libpthreads.a(shr_comm.o) If the details of the user account who made caused a FIM change are not included in the change information, check that AIX® Event Infrastructure is installed and the aha folder mounted correctly. # lslpp -l bos.aha* v8.1 Fileset Level State Description --------------------------------------------------------------------------- Path: /usr/lib/objrepos bos.ahafs 7.2.2.15 COMMITTED Aha File System Path: /etc/objrepos bos.ahafs 7.2.0.0 COMMITTED Aha File System # df Filesystem 512-blocks Free %Used Iused %Iused Mounted on /dev/hd4 1048576 658256 38% 13807 15% / /dev/hd2 5636096 288216 95% 55150 53% /usr /dev/hd9var 917504 324336 65% 2973 8% /var /dev/hd3 393216 210072 47% 264 2% /tmp /dev/hd1 131072 130288 1% 13 1% /home /dev/hd11admin 262144 261384 1% 5 1% /admin /proc - - - - - /proc /dev/hd10opt 1703936 326792 81% 3961 10% /opt /dev/livedump 524288 523552 1% 4 1% /var/adm/ras/livedump /aha - - - 330 2% /aha If you do not get an output similar to the above, please repeat the steps at the start of this section to install and/or mount the aha fs. HubDetails.xml File The Agent configuration settings are controlled by the Hub during operations but the initial registration necessitates a basic config file for registration with the Hub. v8.1 The HubDetails.xml file includes some details unique to your deployment of Change Tracker , hence it requiring your intervention to make sure settings are as needed. The key tags within the file are as follows: Remember, an unencrypted password means the Agent didn’t initialize and suggests a bad installation or .NET Framework issue – remember the Agent on Windows requires .NET V3.5, Linux/Solaris requires the latest NNT Mono runtime. Gen 7 Agent also supports additional nodes – NamePrefix, NameSuffix. The Thumbprint uniquely identifies the Web Server certificate, see the Microsoft How to: Retrieve the Thumbprint of a Certificate article for more information. Step 1 – Open IIS. Step 2 – Select the server from the list on the left hand side. Step 3 – Select Server Certificates. Step 4 – Double click your certificate in the list to open the certificates permissions. Step 5 – Open the Details tab. Step 6 – Scroll to the bottom of the list and highlight the Thumbprint field. Step 7 – The thumbprint value will then be displayed – transpose this to your HubDetails.xml file. The next step is to check that there is network connectivity to the Hub URL from the Agent’s host. NOTE: Where the Change Tracker Hub has been installed on a Windows/IIS platform then the Hub URL will be https://192.168.1.36. v8.1 Rolling Log File Finally, the Agent will maintain a rolling-log of its activity. For Windows : C:\ProgramData\NNT\gen7agent.app.netcore\rolling-log.txt For Linux : /var/nnt/gen7agent.app.netcore/rolling-log.txt This will also provide diagnostic information if the agent is not functioning correctly. v8.1 Administration The Change Tracker console contains several pages that can be selected from the tabs at the top: Dashboard Tab Events Tab Device Tab Overview Tab Planned Changes Tab Reports Tab Settings Tab Dashboard Tab The Dashboard gives a visual indicator of both unusual change volumes and change activity times. The Dashboard provides a dynamic view of changes within the estate and immediate notification of new changes as they are reported. Most elements are ‘active’ so click on the Unplanned section of the Pie Chart will display Events pre-filtered for the Device Group and Time/Date range displayed on the Dashboard. The Dashboard shows recent System Events including: Planned and Unplanned changes for the currently selected device group. Clicking on any chart will link to a detailed event view of the events in question. Overview of trends in compliance report results. Summaries of currently active planned changes. Highlighted problems with individual devices. NOTE: v8.1 The Welcome to Netwrix Change Tracker widget provides Guided Setup Wizards – use them! Click Settings and select an auto refresh period for a dynamic, active Dashboard. More widgets can be added, and additional dashboard tabs can be created. Widgets can be resized and repositioned using click/drag. You can drag the Dashboard ‘widgets’ around, stretch them to increase their size – try it now, it’s fun! To change the Time Period or Devices/Groups displayed, hover over the left-hand margin of the Dashboard – the Groups and Devices, and Date and Time Range selection panels will be displayed. The time does not impact the dashboard widgets but will apply to the other tabs. The local agent installed on the Netwrix Change Tracker host server will already be running and v8.1 Documentation topic for additional information. The auto-enrollment, or registration, process is described in more depth in the Agent Updates topic. but depending on server speed the Local Agent may be found in an ‘Awaiting Registration’ state or already registered in the system. If you do not see an Agent at all then please contact Netwrix Support for further help or use the Agent Troubleshooting of the Admin Guide. NOTE: You can pop-out the Groups and Device selection panel by clicking on the tag as shown above. Make sure the ‘Search Groups’ is set to ‘All Devices.’ Once the Agent registration process has completed you will see that the Device Name and IP Address have been identified and the Operating System. By default, Netwrix Change Tracker is provided with a full list of built-in Device Groups corresponding to the Operating System of the Device. Default Groups are pre-packed with an appropriate monitoring template and CIS Benchmark Report, and as soon as a device has been registered to a Group the device will be monitored for change and CIS compliance automatically. Events Tab Investigate and review any events for devices using powerful filter controls. Events can be acknowledged then used to create new Planned Change rules. Step 1 – Select a Device Group or All Devices then check any Devices to view events. v8.1 Step 2 – Make sure the ‘Device Group’ selector, found in the top left-hand corner of the screen shows ‘All Devices’ and check the ‘Automatically refresh page’ box. Step 3 – Click Filter to precisely focus on events of interest – specify time range, attribute type, change type and keywords. Step 4 – The Query/Report button can be used to specify events to include in a scheduled report or re-useable query for users. See the Reports Tab topic for additional information. Step 5 – Select Events of interest then use Actions to either acknowledge or create/expand a Planned Change definition – use Resubmit to then review other previous events automatically for inclusion within the Planned Change ID. NOTE: Right-click while hovering over an event to invoke the Quick Export, Quick Filter and Resubmit options. Using a combination of these functions, you can quickly focus in on exactly the event type or period of interest Using the Filter Panel The Filter panel is extremely powerful for focusing attention on events of interest, even in large and complex estates with thousands of change/report events to manage. v8.1 v8.1 The new Event Filter in has several key improvements: Recent Group & Device Selections - This provides a dynamically updated list of most recently used devices/groups, so your favorites are always easily within reach. Choose - presents a full list of Devices to allow direct selection. Search Devices - provides a dynamic filter based on partial IP address/partial name for a Device. Date & Time - Range shortcuts Provides a simple selection of pre-defined time ranges, with the option to cycle backwards or forwards. Event Filters - New options to filter by Username or File Hash value now optimized. Planned Change - New option to filter further by Planned Change Schedule name. Once a filter has been set, this will persist across all other tabs, so for example, if you switch from the Devices tab to the Events tab, the same filter selected will be applied to the events shown. Filter parameters set will also be shown at the top of the Events page even when the Filter Control panel is hidden. Export Reports In order to export filtered events, just use the Report/Export button and menu presented. Most fields and settings are self-explanatory but those most likely to need explaining are covered below. v8.1 These options provide control over the report display options. Where a condensed and simplified report is needed, these options can be unchecked, but generally the tables and analysis charts are useful for identifying sources of change noise. v8.1 Set schedule for start and end time for reporting schedule, with frequency for repeating report delivery. Results Delivery options include: List of recipient emails v8.1 Two different report formats e.g. pdf and csv No email if no results, otherwise a reassuring email is always sent, even if there is nothing to report Maximum attachment size is a safety measure to prevent sending of, say, a 5TB report Press the OK button at the bottom of the window when done. Permission and Storage Settings Offered by the Event/Report Settings Netwrix Change Tracker gives greater control over storage usage. By default, reports generated are retained for a finite period after which they are removed. Typically reports are delivered by email so are stored outside of the DB so it is unnecessary to retain the reports within the DB v8.1 too. The events within the reports are retained, of course, but the duplicate set of events created for the report are removed. By default, the originator of the report is provided with visibility of their own reports, but where required, reports can be made visible and/or editable by others. Press the OK button at the bottom of the window when done! Report settings, schedules and results can all be seen and edited on the Reports tab. See the Report Options topic for additional information. Scheduling Automatic Reports Once a filter has been defined it can be saved and given a name and, if required, an automatic schedule for generating regular reports. By default, the user saving the Saved Query will be the recipient for the notification/results email, but additional recipients can be added. Use the on-screen Query/Report dropdown menu to adjust query filters and to export items, either on-demand or as a scheduled, regular report. Query Settings The Query option gives you an on-screen filter control panel like the pop-out Filter Panel. v8.1 11.. NOTE: Note: Press the OK button at the bottom of the window when done! Load Query and Save Query work together – once you have your filters set-up as you want them, you can save these for re-use in the future. Device Tab The Device page provides a full summary of device details, groups membership, planned changes and configuration monitoring policy applied, events and Compliance Report results. The Devices Tab provides a ‘Home Page’ for any selected device where full details of the Device activity, Policy Templates assigned, group membership, report history and other key metrics are collated into a single screen. View device inventory information and group membership. Complete event and report history. Quick access to configuration policy details via ‘Show Tracked Items’. View results of all past compliance reports and run new reports using ‘Run Ad Hoc compliance report’ button. Device inventory information and group membership. v8.1 NOTE: Go to Tracking Configuration tab to see a ‘read-only’ representation of the tracking template assigned, note that this will be a merged version of all Policy Templates inherited by the device. To view the groups that any asset is a member of, click the group name. See Settings -> Groups and show the additional group members. To view the details of the Compliance Report applied, click Compliance Reports name. The latest compliance report will be shown. To see more details of Config Templates or Planned Change details, just click the name of the item. More background information on any of these screens and functions can be found in the Change Tracker Admin Guide. The Event Stream, Configuration and Reports tabs will allow for the review of the data for the device shown. The Configuration tab is where the currently tracked items are shown. Clicking the Start Tracker Now button will either enable or poll the device for current results. Clicking the Report tab allows for the viewing of existing compliance reports or the option to rerun the report. Planned Changes Tab Change Tracker’s Closed-Loop Intelligent Change Control reconciles the security benefits of forensic change control with the detailed workload necessary to review changes. Changes are automatically assessed against expected changes to the configuration baseline, delivering all the benefits of zero tolerance to unplanned changes and a super-sensitive breach v8.1 detection capability, but without the time-consuming, resource-intensive post-implementation review burden. By automatically reducing the background noise of pre-approved changes such as known patching updates, any unplanned changes - which may be breach activity - are exposed and can be investigated. Planned Change definitions can either be recorded from a device in planned change recording mode, or built from the Events page using the Actions button – Rules comprising the Planned Change definition are shown using the Show Rules button, and can be edited using the Settings > Planned Changes page. Click on any Planned Change title to view the Planned Change activity and the Devices enrolled. Planned Change Schedules and Rulesets are modular so can be re-used and modified – click on either the Schedule Name or Rule Set to see details. The Planned Changes screen works in conjunction with the Groups & Device/Date & Time range filter controls. An additional Planned Change filter is also provided to show just the Planned Changes of interest. Equally the Query/Report functions are the same as for the Events screen. NOTE: The Show Rules button is for non-admin users and shows a ‘read only’ view of rules. Click alongside any Planned Change Schedule Name to display a graphical view of changes and a full list of devices with changes below. v8.1 For more detail on Planned Change Schedule and Rule setup, see the Planned Changes Administration topic for additional information. Planned Changes Administration Edit the Schedule, Device Group assignment and Rules for Planned Changes – contact Netwrix Support for more help. Planned Change rules can also be created directly from observed events on the Events page. Alternatively, any Device Group can be set to Record events to generate Planned Change rules, check the In Event Recording Mode when editing rules for a Planned Change. Scheduling, Creating and Editing Intelligent Planned Change Rules Any Planned Change comprises the following elements: Schedule – Start and End time/date, or continuous/no end date for permanently applied Planned Changes. v8.1 Scope – Events from the selected Devices and/or Groups will have the defined Planned Change rules applied to them. Rules – Any number of Rules can be defined for a Planned Change to provide a template for the types of changes to be matched. Rule Definition – Rules are typically defined against Device Events, with the Tracker™, Item Type and logical operator applied to match a file/registry value/software installation etc. name/part name. Use the new Planned Change Wizard to guide you through the steps required to create a Planned Change Schedule and Rule Set. NOTE: Rules can also be created directly from an observed event using the Actions button on the Events Tab, or by recording events directly from a device group. Note that an additional Planned Change Schedule filter is available in the Filter Control panel. Planned Change Schedules can be re-used – use the Clone button to create a copy. Planned Change Wizard The Planned Change wizard helps guide the set-up of a new Planned Change Schedule and Rule Set in a single process. The wizard creates a Planned Change Schedule either with or without a Rule Set assigned. The Rule Set can either be one previously created and re-used, or a brand-new Rule Set can be created. The example below shows the sequence of steps to create a new schedule with a new ruleset. NOTE: In Step 2, you can re-use rulesets where available or choose to create a new set. Rules can be created manually in Step 3 or again selected from the list of available rulesets. v8.1 In Step 4, the Edit Schedule button allows Groups and/or Devices to be added to the schedule. NOTE: If you want to let Netwrix Change Tracker self-learn rules by recording change activity during the schedule, check the In Event Recording Mode box. Planned Change Operation – Closed-Loop Intelligent Planned Change Control Acknowledging Events FIM changes are summarized in simple terms, for example, for File system Events, the Event Description is prefixed with either ‘New File’, ‘Changed File’ or ‘Deleted File’. For more details, just click on the Event Description for any Device Event to see the full detail of the change. Once the Event has been reviewed and approved as valid and desirable, the Event can be acknowledged and assigned to a Planned Change. v8.1 Select the Event(s) to acknowledge then use the ‘Actions’ button to access the options available. The Default option is to use the ‘Acknowledge Events under Planned Change’ and assign the event(s) to the ‘Manually Acknowledged Changes’ Planned Change. The Event will now be categorized as a ‘Planned Change’ and therefore will be masked by the filter control for ‘Unplanned’ Planned Change Status – edit the Filter to show Planned Changes only and the Event will be visible again. Hovering over the Planned link will display the name of the Planned Change and clicking on the link will take you to the Planned Changes page where the events associated with the Planned Change can be analyzed. Intelligent Change Control Creating an Intelligent Planned Change is a straightforward ‘point and click’ operation. Select the event or events to include in the Planned Change definition – a separate rule will be created for each event. As before, use the Actions button but this time, use Create a new Planned Change to capture these events. The default Planned Change format is to include the ‘event donor’ Device Group only, but other or different groups can be selected. Similarly, the Planned Change window start time is taken from the donor event time and left as an ‘ongoing’ open ended window, but these can also be edited. Now delete the FIM_Test file created previously, then recreate the same file again. Finally, create a further new file in /etc called ‘Unapproved_FIM_Test’ then refresh the Events page. Now events are being analyzed automatically, with the Intelligent Planned Change rules being applied to each one as it is recorded. According to the default ruleset created, ‘FIM_Test’ file operations are now approved so deletions, additions and even changes will all be automatically acknowledged as a ‘known-good’ change. However, other file change operations not matching the rule will still be flagged as Unplanned changes. v8.1 Reports Tab To view all the reports from compliance to the executive summary click on the Reports tab. By default, the CIS compliance reports have been added, but additional report types are available as detailed later. The Run button will run the report which will then be available below the report for preview. These reports can be scheduled to run at specific times and be delivered via email in a variety of formats. To add a new report type, select the report from the dropdown menu and then click the Add button. These reports will be added to a new page on the reports page and may not show until the browser is refreshed. If you have added a new report and do not see it, make sure to refresh the page and use the bottom navigation to move to the second page of reports. Reports and Queries Tab All new for Gen7 R2, the Reports Tab provides complete control over all report functions. New reports can be added using the dropdown selector and +Add button in the top right hand corner of the page, or by using the Query/Report button found on the Events and Planned Change tabs. NOTE: Report formatting is controlled by the built-in Compliance reports templates. See the topic for additional information. You will see that any report has a ‘Results available until xx yy zz – this retention period is in place to ensure that reports are not stored forever and using storage resource unnecessarily. Most reports will be emailed at the time of production and either consumed or stored externally, removing the need to store reports long term at the Change Tracker Hub. Don’t worry, the events are retained as long as needed, governed by the separate DaysToKeepEventsFor system setting. See the System Settings topic for additional information. Reports can be regenerated at any time if needed at a subsequent future date. v8.1 Executive Summary Report This report shows at a high level the changes in planned vs. unplanned change and compliance. Edit the report to define the group of interest - this can be all devices or a subset of devices. v8.1 Events Report The events report will show the same data as is available on the Events tab, but in an easy to consume report format. The options allow for filtering by group or device, date range, event and change type with a text search option. This reflects the same filtering options that are available on the side panel filter from the events page. Configuration Template Report This report shows all the monitored items for a given configuration template. This can be used to prove to an auditor what is currently being monitored for change in the environment. Planned Change Report This report shows all the changes associated with a Planned Change. This could be from manually added planned changes, FAST approved changes or from an integration with a ticketing system like ServiceNow. Compliance Reports Compliance reports show the level of compliance to a given standard including CIS, PCI, NIST, etc. There are two options for previewing or downloading the data, either a full report showing all the passing/failing tests with remediation guidance, or as a change over time in summary. To see the full results of the report, click on the View Report button for the desired report. The compliance reports can also be opened from the compliance tab at the top. The Report view shows all rules and results. Report results can also export in either PDF, Excel, or CSV format. The Template selector alongside the Export button provides options for either summarized pass/fail format or full results details format. See the Overview Tab topic for additional information. Quick Export To export the events displayed, use the Export button – choices of PDF, Excel or csv are provided. v8.1 NOTE: The events exported will be governed by the filter settings, not simply what is visible on the screen nor selected using the checkboxes against events. To export a subset of displayed events, apply further filter controls then export. Export Reports In order to export filtered events, just use the Report/Export button and menu presented. Most fields and settings are self-explanatory but those most likely to need explaining are covered below. These options provide control over the report display options. Where a condensed and simplified report is needed, these options can be unchecked, but generally the tables and analysis charts are useful for identifying sources of change noise. v8.1 Set schedule for start and end time for reporting schedule, with frequency for repeating report delivery. Results Delivery options include: List of recipient emails v8.1 Two different report formats e.g. pdf and csv No email if no results, otherwise a reassuring email is always sent, even if there is nothing to report Maximum attachment size is a safety measure to prevent sending of, say, a 5TB report Press the OK button at the bottom of the window when done. Permission and Storage Settings Offered by the Event/Report Settings Netwrix Change Tracker gives greater control over storage usage. By default, reports generated are retained for a finite period after which they are removed. Typically reports are delivered by email so are stored outside of the DB so it is unnecessary to retain the reports within the DB v8.1 too. The events within the reports are retained, of course, but the duplicate set of events created for the report are removed. By default, the originator of the report is provided with visibility of their own reports, but where required, reports can be made visible and/or editable by others. Press the OK button at the bottom of the window when done! Report settings, schedules and results can all be seen and edited on the Reports tab. See the Report Options topic for additional information. Report Options For any of the built-in reports, the Query Settings are available for: Events Report Executive Report Planned Changes Report Configuration Templates Report See the Export Reports topic for additional information. NOTE: The Configuration Template report has a context-sensitive option for Query Settings, allowing selection of all Policy Templates to include in the report. Often an auditor will request details of configuration attributes being tracked and this report provides a convenient way to extract these on a scheduled basis. v8.1 NOTE: The Table of Contents treatment for the output. Links to sections are only supported in the exported PDF, not the Web Browser-rendered report. v8.1 Settings Tab Configuration of all administrative and user settings is performed here. Select one of the tabs on the left for specific settings – contact Netwrix Support for additional information. Agents and Devices – Edit Device attributes such as Group, Type and Credentials, or Delete Devices Device Groups – Administer Device Group names. Click on a Device Group to edit the assigned Device Tracking template and Compliance Report, and to set the reporting schedule Scheduling, Creating and Editing Intelligent Planned Change Rules – Edit the Schedule, Device Group assignment and Rules for Planned Changes Policy Templates – Edit and upload/download configuration policy templates ◦◦ Edit and upload/download compliance report templates ◦◦ Administration of report templates and versions. ◦◦ Define User Credentials for Agentless monitoring and reporting including Database Systems. Users: User Administration – Edit User attributes such as username, assigned system privileges, email address and to assign users to Notification Groups for Alerts and Scheduled Reports. Notification Messages Explained – Alert routing settings. Agent Updates – Upload new agent versions. Agent Updates – Administer templates and rules for Agent registration and Group assignment. Allowed Commands – Administer list of commands used in trackers/reports. System Settings – Edit settings such as SMTP details and to reset the UI to Default. System Settings – Schedule system backups, and exports for Support and Planned Change archiving. System Settings – Displays health of Netwrix Change Tracker system and Event Queue performance. System Settings – Upload new license key. v8.1 Policy Templates Review the following for additional information: Create/Edit a Configuration Monitoring Policy Policy Templates: FIM File Integrity Policy Templates: File Contents Policy Templates: Installed Software and Updates Policy Templates: Registry Policy Templates: Processes and Services Policy Templates: Security and Audit Policy Tracker Policy Templates: Local User/Domain Controller Account Tracker Policy Templates: Process/Command Output Policy Templates: Network Port Tracker Network Scan v8.1 Policy Template Administration Edit and upload/download configuration policy templates – the default templates provided with Netwrix Change Tracker are already aligned to default Device Groups, but this association can be changed together with the make-up of the Configuration Monitoring policy NOTE: Always click the Save Changes button after any edit. To configure additional File/Folder/Registry Match Pattern definitions, click on the Show Advanced Options button. Create/Edit a Configuration Monitoring Policy A Configuration Monitoring Policy template comprises a wide range of attributes that can be monitored including Files/Folders and File Contents, Registry Keys/Values, Installed Software and Updates, Processes and Services (Running and Startup states), Security and Audit Policy* and Local User Accounts (* Windows platforms only). One of the key strengths of Netwrix Change Tracker is that even the configuration of complex FIM policies is straightforward. Templates for all standard platforms are provided, based on trusted guidance from the Center for Internet Security. To create a new Configuration Monitoring Template, either upload a pre-defined template file provided by Netwrix or click + Add a Template. To edit a template, just click on the Edit button alongside the template name. When a custom policy is needed, for example, to protect the integrity of a bespoke application, set-up is easy too. Paths and files to track are specified along with details of the file/foldermatch specification to use – these can be pre-defined and just picked off from a drop-down menu so there is no need to always be working out commands to use and any regular expressions needed to target the tracking. v8.1 Similarly, there is a simple way to define exclusions, again with or without using a file/foldermatch specification. This same approach is extended to Registry tracking so that precisely the keys and values that need to be tracked are. This results in a precision, tailor-made monitoring policy to only track changes where required, eliminating spurious changes and unwanted change noise. Policy Templates: FIM File Integrity File System Integrity Monitoring is crucial for security and most Security Policies/Standards e.g. PCI DSS, mandate use of this control. Netwrix Change Tracker will monitor and alert on any fi le or folder change – a new file appearing, such as a Trojan being added to the System 32 folder, or an application hack/modification will be detected and alerted. Polling Frequency – The default setting is to run a full poll (effectively a new baseline operation) only when the Agent has been restarted e.g. after a reboot but the Agent may be run in a ‘polling-only’ mode. This disables live tracking (the Tracking Style attribute for the Tracker should be set to Polling) and means that the only change detection is performed when the scheduled poll is run. While this loses the benefits of real-time change detection, it can be desirable in sensitive environments where server resource loads need to be minimized under all conditions. v8.1 Define Path – Click + Add a Tracked Folder to add a new folder/path to be tracked. Change Tracker provides a range of tokens (conceptually similar to the Windows Environment Variables) so that template definitions can be universally applied even if the OS Installation volumes used are different, e.g. OS installed onto D: rather than C: %SYSDIR% = \Windows\System32 %WINDIR%\SysWOW64 = \Windows\SysWOW64 %PROGRAMFILES% = \Program Files %PROGRAMFILES(x86)% = \Program Files (x86) Tracking Specification: ◦◦ Tracked Folder – File Hashing – Selects the Cryptographic Hash Algorithm used to record a DNA Fingerprint for each file – this option will record a secure hash value for the files being tracked and use this as a definitive metric for file integrity. ◦◦ File/Folder Name Matching – System files recursive will limit tracking to *.exe, .dll, *.sys, *.drv files for this folder and any sub-folders. All files will track all fi les with or without an extension. ◦◦ Tracking Style – See point 1 regarding Poll Period, options are tracking only, polling and tracking or poll only. ◦◦ Tracked Attributes – Options are: File Attributes – Excluding contents only NOTE: Contents tracking is defined under the File Contents tab Folder/Directory Attributes – Only or All File and Folder Attributes. Default is to use File Attributes only as tracking changes at the Folder level in Windows may sometimes give spurious events due to the way in which the Windows fi le system behaves. ◦◦ File Hashing – Selects the Cryptographic Hash Algorithm used to record a ‘DNA Fingerprint’ for each file – this option will record a secure hash value for the fi les being tracked as a definitive metric for file integrity. Options are: None MD5 SHA1 SHA256 v8.1 SHA384 SHA512. In fact, all significant attributes for each file are tracked and any change to any attribute will be detected. The secure hash checksum provides a DNA Fingerprint of a file, such that, in the case of a Trojan, even if the Trojan file is made to look identical to a legitimate system file, it will still be identified as being a changed file. Exclusions are configured in a similar manner to the inclusive tracking above. NOTE: For Advanced Options: see Appendix B for more information. Policy Templates: File Contents Configuration settings conveyed using config files can be tracked directly using the File Contents Tracker. Similarly, to the FIM Tracker, changes can be tracked continuously to give real-time notifications of any changes, or via a periodically scheduled poll. Netwrix Change Tracker supports a regular expression-based data-extraction operation to precisely focus the tracking on salient entries only. Step 1 – Polling Frequency. The default setting is to run a full poll (effectively a new baseline operation) only when the Agent has been restarted e.g., after a reboot but the Agent may be run in a ‘polling-only’ mode. This disables live tracking (the Tracking Style attribute for the Tracker should be set to ‘Polling’) and means that the only change detection is performed when the scheduled poll is run. While this loses the benefits of real-time change detection, it can be desirable in sensitive environments where server resource loads need to be minimized under all conditions. v8.1 Step 2 – Define Path. Click + Add a Tracked Folder to add a new folder or path to be tracked. Step 3 – Tracking Specification: Tracked File Path – File Hashing. Selects the Cryptographic Hash Algorithm used to record a DNA Fingerprint for each file – this option will record a secure hash value for the files being tracked and use this as a definitive metric for file integrity. Regular Expression. If left blank, the entire contents of the file will be recorded and tracked, but using a Regular Expression will focus tracking on contents isolated by the regex, useful if only certain elements of a file contents need to be tracked. RegEx Ignore Case. If using a Regular Expression this ensures that tracking is case insensitive. Policy Templates: FIM File Integrity for Legacy Platforms/Agentless Operation Where it is desirable to not use an Netwrix Change Tracker Agent, or where the platform to be monitored does not currently have an Netwrix Agent available for it e.g. HP Non-Stop, Netwrix provide various Agentless FIM options. All Agentless monitoring is performed via a Master Proxy Agent – the Proxy function is supported by any Netwrix Change Tracker Agent and the dedicated Netwrix Agent App Proxy Agent. See the later section on Agentless FIM for more information. v8.1 Policy Templates: Installed Software and Updates NOTE: This template applicable to Windows OS only. Software installations and updates are critical dimensions of a host’s configuration. It is therefore essential that these are tracked and recorded from compliance, security, and configuration management perspectives. Enabling the Tracker is simple – check the Track Installs and Windows Updates box and then save the settings to the device. Changes will be detected on a scheduled, polled basis, with the frequency governed by the Repeat setting. A No Repeat setting will ensure a poll only occurs on a server re-boot which may be appropriate for a host with tightly governed resources. Policy Templates: Registry NOTE: This template applicable to Windows OS only. The Windows Registry was designed as the core repository for configuration settings. Monitoring of Registry Keys and Values is another way to ‘fingerprint’ an application or device configuration state. NOTE: To select a Registry Key to monitor, the best way is to use the Microsoft ‘regedit’ program (start -> run -> regedit). You can then browse all Registry Keys for the device and at any point use a ‘right click’ to access the tools menu which includes an option to ‘copy key name’. You can then paste the key name into the Compliance Hub field. Click Add new registry key and type or paste the Key into monitor. Once you have added a Key to monitor, click Insert then Save Settings to Device. v8.1 Like the File Integrity settings covered earlier, exclusion rules can be used, and Registry Trackers can also be filtered using a Registry Key/Value Match Rule and a Tracked Attributes dimension. Use the Advanced Options to create and edit new Definitions. See theRegistry Inclusion/ Exclusion Match Rules topic for additional information. Policy Templates: Processes and Services The Processes and Services tab allows Processes and/or Services (Windows only) and their states to be defined within your Configuration Policy as either Whitelisted or Blacklisted. v8.1 A key indicator of breach or malware activity is the existence of new processes or services. Likewise, configuration hardening and vulnerability mitigation always requires unnecessary services and daemons to be removed or disabled. Therefore, it is important to track process lists and services and their states. Any non-necessary Services or Services you are generally unconcerned about should be marked as Ignore State. Uncategorized Process/Service Action - Use this option if you want to be alerted to the presence of any new, uncategorized processes or services. This is an option as in some situations it may be convenient to be alerted to missing, key processes. Polling Frequency - See previous Change Tracker notes. Define Process (Service) Name - Processes/Services can be defined as either Required, Blacklisted, Whitelisted or Graylisted. ◦◦ Required - The Process/Service must be in the state required and an alert will be raised if this is not the case. v8.1 ◦◦ Whitelisted - The Process/Service is allowed to be present, but this is not mandatory. ◦◦ Blacklisted - The Process/Service is never allowed to be present, and an alert will be raised if this is not the case. ◦◦ Graylisted - The process/service has not yet been allocated to another category. Policy Templates: Security and Audit Policy Tracker NOTE: This template applicable to Windows OS only. Netwrix Change Tracker can be used to track changes to an extended range of Security Settings covered by the Audit and Security policies. The majority of critical security settings, user permissions and audit policy specifications are defined in the Local Security Policy, either directly or via Group Policy. There is minimal configuration required to activate the Tracker – just check the Track security and audit policy settings in this template box and define the poll period then save settings to the Template. Any changes to the initial baseline will be alerted and reported. Policy Templates: Local User/Domain Controller Account Tracker NOTE: This template applicable to Windows OS only. Netwrix Change Tracker can also be used to track changes to Local User Account Settings. Typically local User Accounts should be limited and usage restricted in favor of centralized identity and access management authority such as a Domain Controller. As such the monitoring of local user accounts is a key security consideration. NOTE: When an Netwrix Change Tracker Agent is used on a Domain Controller, tracking the local user accounts will in effect track the Domain user accounts – in cases where this is not required, uncheck the Track account information on Domain Controllers box to limit tracking to just the Built-In accounts only. v8.1 There is minimal configuration required to activate the Change Tracker – just check the Track local user account settings in this template box and define the poll period then save settings to the Template. Any changes to the initial baseline will be alerted and reported. Policy Templates: Process/Command Output Where required, Netwrix Change Tracker can also execute commands on the endpoint device. Note that commands must be pre-approved for usage. All standard commands employed within Change Tracker Compliance Reports and the built-in Policy Templates are pre-approved but if you add any new commands these may require Admin approval. See the Allowed Commands topic for additional information. Agent-Based Monitoring – Where an Agent is being used for monitoring the commands will be executed directly by the Agent and the initial baseline stored in the local Agent database, with any subsequent changes detected being reported back to the Hub. The commands will be run using whichever service account has been assigned to it. When run on Windows any commands are run from the standard Windows\System32 shell and therefore may require a full executable path to be specified e.g. cmd /C %systemroot%\system32\inetsrv\appcmd list VDIR /text:VDIR.NAME Commands will be executed indirectly by the Master Proxy Agent being used and the initial baseline stored in the Proxy Agent database, with any subsequent changes detected being reported back to the Hub. The commands will be run using whichever service account has been used in the assigned Credentials. v8.1 Use of RegEx – Whether using Agent-based or Agentless Command Output Trackers, a Regular Expression can be applied to the command output to filter/match s pecific keywords/patterns. Note that any device-offered RegEx capabilities e.g. egrep on Linux, can still be used instead of or to complement the Agent regex applied. The Agent will only trust a signed Configuration Template issued from its assigned Hub. Please contact Netwrix Support for additional information. Policy Templates: Network Port Tracker The Network Port Tracker is designed to detect track changes to the open network ports on either a single device, or a range/group of devices. The Tracker uses a range of networkscanning approaches, either probing a device externally via the network to determine whether TCP and UDP ports are open or not, or using a local command on the device, such as netstat. Remote, external scans are executed from a Netwrix Agent and utilizes an NMAP instance installed locally to the Agent. This means that there are three scanning options available: Self-Scan - Local Agent scans the local host using the local netstat. The same agent can run a full template including all other Tracker types. Remote Scan – A remote Agent scans the host/device. In this mode, the remote device is configured as a Proxied device for the Agent being used, and therefore for other Trackers to be run against the Proxied Device, credentials will be required e.g. Cisco Firewall running config can also be tracked if valid credentials are assigned. Network Scan – A Agent can be used to scan a range of devices. In this instance the ‘device’ is defined as ‘The Network’ or ‘New York Office LAN’, with the address range defined as ‘192.168.1.1-255, or 192.168.1.18 192.168.1.19 192.168.1.20-100’, i.e. individually specified addresses space separated, ranges defined using a - The NMAP package must be installed to a default program file location (Windows: Program Files(x86)\Nmap), Linux: /usr/bin/) v8.1 The Network Port Tracker is configured by specifying port ranges to include and exclude from the scan. In addition, the protocol used for each range can also be selected, either TCP, UDP or both. NOTE: As with any UDP scan, the non-acknowledged nature of UDP requires a more intensive, slower approach which may result in scan times exceeding 24 hours. Network Scan There are several steps required to configure and define a multi-device network scan. v8.1 Step 1 – Define The Network device. Select the agent from which you would like the scan to run, usually the Agent installed on the Hub server, but any remote Agent or Agents can be used to run scans to their local subnet, thereby simplifying routing/firewall rules. Host/Database Name - Define the individual addresses and/or address range; use a space to separate multiple entries; use a 1-20 notation for an inclusive range. Credentials - For a multiple device/address port scan range, no credentials are required so a simple No-Connection-Required credential key is needed. v8.1 Credential Name - Create a ‘No-Connection-Required’ credential key – a username and password will be required but these can be entered as dummy credentials. Step 2 – The Network Port Tracker can then be scheduled to run like any other Tracker although due to the typically prolonged time needed to complete each scan, especially if UDP ports are included, we would advise that the Tracker is set to Polling frequency: run at ‘agent startup’ and repeat ‘No repeat’. Step 3 – Once the initial poll has completed the duration will be required as a communications Event. Step 4 – Provided you have specified within the Tracker template to Send Baseline Events then you will also be able to see both the full baseline/status for the Tracker results, as well as the usual change events. Similarly, you can also report on these, export the events, and receive alerts for any Planned and Unplanned changes. v8.1 Agents and Devices Devices will be automatically assigned to a Group as determined by results of the New Device Discovery policy report. Device attributes such as Group, Type and Credentials, or Delete Devices can be edited below. Devices are automatically assigned to a Device Group based on the Discovery Report results but this can be overridden herel; The ‘Last Poll Time’ will also filter devices on a before or after date/time; Click Edit to change Group Assignment and to enable Diagnostic Mode or to Block Events from the Device; Diagnostic Mode generates more detailed dialogue from the Agent regarding its operation, for example, Baselining progress – this is disabled by default to reduce activity and events storage; Event Send Block allows events to be temporarily blocked for a Device, for example, in case a misconfigured template is generating too much noise. NOTE: Use the Filter Control Panel to allow focus on just the Devices or Groups of interest. v8.1 NOTE: Click on the ‘burger’ icon alongside any column heading to get a full list of column options. v8.1 Agent Updates When a new agent version is released and downloaded from the customer portal, it can be uploaded to the Hub. It is then possible deploy the agent update to all (or specific) devices from within the console. The deployment can be instant or scheduled. An agent update is comprised of two zip files. One is a new set of program files, the other is a upd file, which signs the update to confirm its integrity. The Agent Updates page can be found in the Settings menu. The Actions button on this page has an option to Upload an Agent Update. v8.1 The resulting dialog facilitates the upload of the agent update files. The deployment schedule for a new update can be controlled via the Agent Software Updates tab on a per Device Groups basis – See the Device Groups topic for additional information. v8.1 Check the Devices tab to ensure that updates have been deployed as expected. Agent Configuration There are multiple ways to set values in an agent's configuration file on installation. Once an agent has been configured and has successfully registered with the Hub, its configuration can be managed remotely with the Agent Updates tab.See the Agent Installation topic for additional information. Follow these steps to update the agent hub configuration. Step 1 – Select Agent Updates from the Settings menu and then click Actions on the page that loads to display the options for Upload an Agent Update andUpdateHubDetails. HubDetails is the name of the config file used for agents. Step 2 – Select Update HubDetails to open the Update agent hub details window. v8.1 Step 3 – Select the devices or groups of devices to configure and then enter the desired values. CAUTION: Altering the URL could cause the agent to be unable to communicate with the Hub and require direct manual intervention to resolve. CAUTION: Altering the agent username or password could cause the agent to be unable to communicate with the Hub if a matching user account does not exist. This too would require direct manual intervention to resolve. CAUTION: Altering the username or password of the user account used by any agent will render those agents incapable of communicating with the Hub. A corrective password will not be able to be broadcast to the now offline agents. Direct manual intervention would be required to resolve. For most fields, leaving a blank value will ensure that the current values for those fields in the target agent's configuration files will remain as they are. Leaving the Name prefix field blank will remove any existing prefix for the target devices. v8.1 Step 4 – Click OK to broadcast the new configuration to the agents on the target devices. This should take less than a minute to apply. Agent Credential Rotation There are two ways to change the credentials that agents use to authenticate with the Hub. If it is suspected that agents have been compromised, it is recommended to take the out of band process described in this document. If authentication details are being rotated as part of a routine process, then the in band alternative is to set all agents to use new credentials from within the Hub's web console. See the Agent Configuration topic for additional information. The scripts at the bottom of this page can be used to update authentication details on devices. These scripts can be rolled out to all devices with an IT automation system. These scripts stop the agent, set the new authentication details in the agent's configuration file, and then restart the agent, which on start-up will encrypt the password. An encrypted password with have E1 tags in the configuration file. The Agent Account During installation of the Hub, an account named Agent is created with just the Agent role. This role enables agents to use this account to authenticate with the Hub. As the agent account has no other roles, it can only be used by agents to authenticate. Rotate Agent Credentials The existing agent account can be seen in the Users section of the Hub. v8.1 CAUTION: Changing the password of an account used by agents to authenticate will cause the agents to go offline as they will be attempting to authenticate with the old password. RECOMMENDED: For a smooth transition, it is recommended to create a new account with just the Agent role. This account will have a different user name and password. Once created, the agent's configuration can be updated to use the new account. When all agents have been migrated, the old agent account can be removed. Follow the steps to create the new agent account. Step 1 – Click Create New User, give it a user name and just the Agent role. Step 2 – Click Update, and the User Password dialog opens with a complex password. This is only shown once. It is recommended that this be saved in a password management system for future use. Agent Authentication Update on Windows For Windows devices the ChangePasswordOOB.ps1 PowerShell script can be used to update the authentication details and restart the agent. The two variables, $newUsername and $newPassword, near the top of the script, must be set to match the new agent account. v8.1 Running the script will set the new authentication details and restart the agent while producing the output below. ChangePasswordOOB.ps1 # Define the service name and default config file path$serviceName = "Gen7A gentCore"$configFilePath = "C:\ProgramData\NNT\gen7agent.app.netcore\HubD etails.xml"# Set the new password here$newPassword = ""$newUsername = "" # Check if the new password is setif ([string]::IsNullOrEmpty($newPasswo rd)) { Write-Error "Please set a new password in the `$newPassword varia ble" -ErrorAction Stop return}# Check if the new username is setif ([str ing]::IsNullOrEmpty($newUsername)) { Write-Error "Please set a new usern ame in the `$newUsername variable" -ErrorAction Stop return}# Stop the s ervice if it's running$service = Get-Service -Name $serviceName -ErrorAc tion SilentlyContinueif ($service.Status -eq "Running") { Write-Host "St opping service '$serviceName'..." Stop-Service -Name $serviceName -Force Write-Host "Service '$serviceName' stopped successfully."} else { Write Host "Service '$serviceName' is not running or does not exist."}# Read the contents of the config file$configContent = Get-Content -Path $configFil ePath# Replace any <Password>...</Password> or <Password/> tag with the new password$configContent = $configContent -replace "<Password>.*?</Passw ord>", "<Password>$newPassword</Password>"$configContent = $configContent replace "<Password\s*/>", "<Password>$newPassword</Password>"# Replace any <Username>...</Username> or <Username/> tag with the new username$co nfigContent = $configContent -replace "<Username>.*?</Username>", "<Userna me>$newUsername</Username>"$configContent = $configContent -replace "<User name\s*/>", "<Username>$newUsername</Username>"# Remove all occurrences of the <E1/> tag$configContent = $configContent -replace "<E1\s*/>", ""# W rite the updated content back to the config file$configContent | Set-Conten t -Path $configFilePathWrite-Host "The username and password have been re placed and <E1/> tag(s) removed successfully."# Restart the service afte r the changeStart-Service -Name $serviceNameWrite-Host "Service '$servic eName' started successfully." v8.1 Agent Authentication Update on Linux For Linux devices a bash script named UpdatePasswordOOB.sh is available to set the authentication details and restart the agent. The two variables newUsername and newPassword near the top of the script must be set to match the new agent account. Running the script will set the password and restart the agent while producing the output below. UpdatePasswordOOB.sh #!/bin/bash# Define the service name and default config file pathSERVICE_NA ME="nntgen7agentcore"CONFIG_FILE_PATH="/etc/NNT/gen7agent.app.netcore/Hu bDetails.xml"# Set the new password herenewPassword=""newUsername=""# Ch eck if the new password is setif [ -z "$newPassword" ]; then echo "Error : Please set a new password in the 'newPassword' variable." exit 1fi# Che ck if the new username is setif [ -z "$newUsername" ]; then echo "Error: Please set a new username in the 'newUsername' variable." exit 1fi# Stop the service if it's runningif systemctl is-active --quiet $SERVICE_NAME ; then echo "Stopping service '$SERVICE_NAME'..." systemctl stop $SERVIC E_NAME echo "Service '$SERVICE_NAME' stopped successfully."else echo "Se rvice '$SERVICE_NAME' is not running or does not exist."fi# Check if the config file existsif [ ! -f "$CONFIG_FILE_PATH" ]; then echo "Error: Config file not found at $CONFIG_FILE_PATH" exit 1fi# Replace any <Password>...< /Password> or <Password/> tag with the new passwordsed -i "s|<Password>.* </Password>|<Password>$newPassword</Password>|g" "$CONFIG_FILE_PATH"sed - i "s|<Password\s*/>|<Password>$newPassword</Password>|g" "$CONFIG_FILE_PAT H"# Replace any <Username>...</Username> or <Username/> tag with the new passwordsed -i "s|<Username>.*</Username>|<Username>$newUsername</Usernam e>|g" "$CONFIG_FILE_PATH"sed -i "s|<Username\s*/>|<Username>$newUsername</ Username>|g" "$CONFIG_FILE_PATH"# Remove all occurrences of the <E1/> ta gsed -i "s|<E1\s*/>||g" "$CONFIG_FILE_PATH"echo "The username and passwor d have been replaced and <E1/> tag(s) removed successfully."# Restart th e service after the changesystemctl start $SERVICE_NAMEecho "Service '$S ERVICE_NAME' started successfully." v8.1 Device Groups Click on a Device Group to edit the assigned Device Tracking template and Compliance Report, and to set the reporting schedule – contact Netwrix Support for more help To create a new Device Tracking template, use the Configuration Templates page; Assigning more than one Device Tracking Policy to a Device Group will result in a single merged policy being created; To create a new Compliance Report template, use the Compliance Report Templates page; To add additional Compliance Reports to a Device Group, just click the Schedule a New Report button; Use the ‘Group Name’ box to search and filter Device Groups shown. Click on a Device Group name to configure further attributes for the Group, such as: Device Tracking Policy Compliance Report(s) Group Members, with the option to export a list of group Members Define the schedule for Agent Updates v8.1 Agent Discovery/Registration Process An Agent is a highly automated and intelligent piece of software with extensive capabilities for monitoring and reporting on your secure endpoints. It is therefore critical that the agent is securely governed by the controlling system and there are a range of operations involved when registering and driving the agent. First Run – HubDetails.xml File The Agent configuration settings are controlled by the Hub during operations but the initial registration necessitates a basic config file for registration with the Hub. The HubDetails.xml file includes some details unique to your deployment of Netwrix Change Tracker , hence it requiring your intervention to make sure settings are as needed. The key tags within the file are as follows: The Thumbprint uniquely identifies the Web Server certificate, see the How to: Retrieve the Thumbprint of a Certificate Microsoft article for additional information. NOTE: Agent also supports additional nodes – NamePrefix and NameSuffix. Agent does not need the UseNewHub node to be defined – this will default to true. Step 1 – Open IIS Manager. Step 2 – Select the server from the list on the left hand side. v8.1 Step 3 – Select Server Certificates. Step 4 – Double click your certificate in the list to open the certificates permissions. Step 5 – Open the Details tab. Step 6 – Scroll to the bottom of the list and highlight the Thumbprint field. Step 7 – The thumbprint value will then be displayed – transpose this to your HubDetails.xml file. Registration Provided the Agent can connect to the Hub /api page (referenced in the HubDetails.xml), the registration process takes place. The Agent presents its Username and Password (referenced in the HubDetails.xml) and is authenticated against credentials held at the Hub (or Active Directory server if used). The Agent will then download and run the assigned Registration Report* which determines the Device Group that the Device will be assigned to. The Registration Report is like a full Compliance Report in that it can provision Tracker’s to gather config data from the device and process the returned data using rule expressions, with the results governing Group assignment. In this example, the group regex match (-WEBSERVER-|-EPOS-|-APPSERVER-) extracts only those substrings if present, then the <Replace From lines substitute in a valid group name for each possible match (in other words, there must be a group already defined with the Group name being referenced). This substituted name is then used as the initial group to register the agent into. Note: if there s no match they ll end up in the default New Devices . v8.1 You can view and edit the Default Registration Report from the System page. In conjunction with the Registration Report, the optional Registration Script parameters can be used, providing a GUI option for post-processing Registration Report results in order to control group allocation. In the example below it is assumed the report has a variable called regvalue_variable i.e. reading a value from the registry, and the custom code reads this value and appends it to the text Custom. So, if the registry value contained WebServer, the device would be placed in the CustomWebServer group if it exists, falling back on New Devices if it doesn t. Credentials The credentials page is accessible from the Settings menu. This is where credentials used to connect to remote devices and services are created and managed. The page is a list of grids containing credentials for different types of device, protocol or service. While some grids may only be visible if certain licensees or options are in place, this is the full list: ITSM System Credentials Cloud System Credentials SSH / Telnet Credentials Splunk Credentials ESXi / vCenter Credentials v8.1 Database Credentials Each grid has a button to create a new credential. The far right column contains buttons to edit and delete specific credentials. ITSM System Credentials These credentials are used to connect to an ITSM and discover devices to scan from the ITSM's configuration item catalog. Cloud System Credentials These credentials are used by the Cloud Tracker feature to track changes to cloud platform configuration. v8.1 SSH / Telnet Credentials These credentials are used for agentless connections to devices (Linux, switches, routers, etc.) via SSH or Telnet. Credentials for Windows agentless connections are also stored here. Splunk Credentials These credentials are used to connect to the API of a Splunk instance and pull specific logs into Change Tracker as change events. v8.1 ESXi / vCenter Credentials These credentials are used to connect to ESXi devices or to connect to a vSphere and discover all of it's ESXi nodes. Database Credentials These credentials are used by database compliance reports to connect directly to a database instance. System Settings Edit settings such as SMTP, Active Directory and Syslog server details, and to reset the UI to Default. User Password Settings enables the enforcement of a User Password Policy where AD is not being used. v8.1 After entering SMTP and/or Syslog Host details, test that emails/messages are being sent OK by using the Test button. Clicking Advanced Options presents other System Settings, including a library of NNT_FILEHASH binaries to use in conjunction with any Agentless FIM. System Settings Glossary Complete glossary of System Settings special attributes and a description of each. Table 1: Description Default/Sample Value Comments AgentOfflineGracePeriod 300 Number of Seconds for Agent o ffline reporting BaseUrl https://192.168.2.160/ System URL CreateDefaultGroups Yes Suppress re-creation of default Groups on startup CreateDefaultQueries Yes Suppress re-creation of default Queries on hub startup DaysToKeepEventsFor 120 Number of Days to keep events in MongoDB DeleteDevicesOfflineForSeconds 86400 Devices offline for this amount of time are automatically deleted EventStatsUnitSeconds 30 Granularity (minutes) of events for Dashboard IncludeDevicesWithNoEventsInEve ntExport Yes Includes all devices in Reports v8.1 Description Default/Sample Value Comments Number of Seconds for Agent o ffline AgentOfflineGracePeriod 300 reporting BaseUrl https://192.168.2.160/ System URL Suppress re-creation of default CreateDefaultGroups Yes Groups on startup Suppress re-creation of default CreateDefaultQueries Yes Queries on hub startup Number of Days to keep events in DaysToKeepEventsFor 120 MongoDB Devices offline for this amount of DeleteDevicesOfflineForSeconds 86400 time are automatically deleted Granularity (minutes) of events for EventStatsUnitSeconds 30 Dashboard IncludeDevicesWithNoEventsInEve Yes Includes all devices in Reports ntExport Table 1: Description Default/Sample Value Comments MaxStringLengthForExportCell 3000 Controls the max number of characters to be exported for a report MongoDumpPath C:\Program Files\NNT Change TrackerSuite\Gen7\MongoDB\bin Path to MongoDump Executable MinimumFileHashReputation AssuredGood Controls the level of Whitelist assurance that maps to a planned event, alternative is AssumedGood which will bias results to give more tolerance to lower file reputations PollGracePeriodSeconds 20 Number of Seconds for Polled Device grace period for offline reporting ReportAllErrors Yes Report on all Errors SessionTimeout 10 minutes (0 to disable) Minutes before User Session is terminated SessionTimeoutWarning 30 seconds (0 to disable) Warning before a User Session is terminated SyslogUseLocalTime False Syslog is sent with UTC time by default, but this setting will send syslogs with local times gathered from the devices the agents run on. v8.1 Description Default/Sample Value Comments Controls the max number of MaxStringLengthForExportCell 3000 characters to be exported for a report C:\Program Files\NNT Change MongoDumpPath Path to MongoDump Executable TrackerSuite\Gen7\MongoDB\bin Controls the level of Whitelist assurance that maps to a planned MinimumFileHashReputation AssuredGood event, alternative is AssumedGood which will bias results to give more tolerance to lower file reputations Number of Seconds for Polled PollGracePeriodSeconds 20 Device grace period for offline reporting ReportAllErrors Yes Report on all Errors Minutes before User Session is SessionTimeout 10 minutes (0 to disable) terminated Warning before a User Session is SessionTimeoutWarning 30 seconds (0 to disable) terminated Syslog is sent with UTC time by default, but this setting will send SyslogUseLocalTime False syslogs with local times gathered from the devices the agents run on. Table 1: Description Default/Sample Value Comments TextSearchMethod Text Search method used, can be set to ‘regex’ to use more precise regular expression match v8.1 Description Default/Sample Value Comments Search method used, can be set to TextSearchMethod Text ‘regex’ to use more precise regular expression match Allowed Commands The Change Tracker agent is designed to run commands on devices to baseline and analyze configuration settings, either for Compliance Reports or Policy Templates. It is important to ensure that only authorized commands can be used to avoid any unintended consequences. Change Tracker provides a stringent approval process for any new commands being introduced, either for a report or policy template, and all reports/templates are analyzed to ensure all commands used are approved. If a new command is encountered, this will be flagged as such: You can either immediately click the warning to access the approvals workflow and you can show a listing of all reports/policy templates with Untrusted commands using the filter on the Policy Admin page. Clicking on the Not Trusted link, you will be invited to enter a code generated by the 2FA resource linked to the Change Tracker instance during initial setup. v8.1 Using the Allowed Commands Page Navigate to Settings – Allowed Commands: Filters for Trusted Commands - Allows selection of the commands, templates or reports to work with; v8.1 Allowed Commands sub-tabs; Actions - Allows commands to be managed using bulk operations. License Inspect details for the current license and upload a new license key if required. To add a new license key, just paste the code provided into the Add New License field and click Upload License. System Performance View the health of the Change Tracker system and Event Queue performance here. Please contact Netwrix Support for specific requirements regarding System Performance metrics. User Notifications Once devices have been assigned to Device Groups and a Configuration Template has been assigned, a Baseline of the configuration will be recorded and thereafter, any changes detected can be reported as email or syslog alerts. Each Netwrix Change Tracker user can be assigned a personalized alerting profile from a range of event options for each Device Group. Access the User Notification Email page via Settings -> User Notification Emails and select a user, then dial in Notification Types for the selected Device Group. Table 1: Notification Type Notification Trigger Agent Error Connection issues, mostly seen with agentless devices that can not be discovered. Audit (System Config Change) When a user changes a settings in system s ettings, such as password requirements, emails, etc. Audit (Template Change) When a new template is uploaded or modified. Audit (User Admin) When account is added, deleted or roles are modified such as email address, two factor authentication, etc. System Error When an event's details have been tampered with, for example, a failed hash check. Audit (Device Admin) A device was registered, deleted or group membership changed. v8.1 NOTE: Core system settings such as the Syslog Server and SMTP details will also need to be defined via Settings -> System Settings in the Change Tracker . See the System Settings topic for additional information. Notification Messages Explained Review the tables below to see the detailed explanation of the notification and event messages. Notification Messages Notification Type Notification Trigger Connection issues, mostly seen with agentless devices Agent Error that can not be discovered. When a user changes a settings in system s ettings, Audit (System Config Change) such as password requirements, emails, etc. Audit (Template Change) When a new template is uploaded or modified. When account is added, deleted or roles are modified Audit (User Admin) such as email address, two factor authentication, etc. When an event's details have been tampered with, for System Error example, a failed hash check. A device was registered, deleted or group membership Audit (Device Admin) changed. Table 1: Notification Type Notification Trigger Audit (Device Details Change) Audit of a change in agent machine name, IP address, version, etc. Table 2: Event Message Description Your backup scheduled at <date> is complete. This notification message is generated when a scheduled backup finishes successfully. Backup types vary from full backups, to individual sections of the software i.e. Planned Changes/Events. Your backup scheduled at <date> encountered an error. (+ error here) This notification message is generated when a scheduled backup finishes with errors. The error message will be displayed within the events description – this information may be used by Netwrix Support to resolve the issue. Your restore scheduled at <date> is complete. This notification message is generated when a scheduled restore finishes successfully. Restore types vary from full backups, to individual sections of the software i.e. Planned Changes/Events. Your restore scheduled at <date> encountered an error. (+ error here) This notification message is generated when a scheduled restore finishes with errors. The error message will be displayed within the events description – this information may be used by Netwrix Support to resolve the issue. v8.1 Notification Type Notification Trigger Audit of a change in agent machine name, IP address, Audit (Device Details Change) version, etc. Event Messages Event Message Description This notification message is generated when a scheduled backup finishes successfully. Backup types Your backup scheduled at <date> is complete. vary from full backups, to individual sections of the software i.e. Planned Changes/Events. This notification message is generated when a scheduled backup finishes with errors. The error Your backup scheduled at <date> encountered an message will be displayed within the events error. (+ error here) description – this information may be used by Netwrix Support to resolve the issue. This notification message is generated when a scheduled restore finishes successfully. Restore types Your restore scheduled at <date> is complete. vary from full backups, to individual sections of the software i.e. Planned Changes/Events. This notification message is generated when a scheduled restore finishes with errors. The error Your restore scheduled at <date> encountered an message will be displayed within the events error. (+ error here) description – this information may be used by Netwrix Support to resolve the issue. Table 1: Event Message Description Scheduled Query document size exceeds 16mb. Consider altering the saved query schedule or filte r options to produce fewer results. [<query name>] This notification message is generated when a report collated from the results of a saved query is too large. The end user will need to reconfigure their queries schedule to include less days or to include fewer event types – being more specific will produce fewer results. Netwrix Change Tracker™ - Group Report Results (Scheduled compliance report run change details) This notification message is generated when a scheduled report assigned to a Change Tracker group has completed. To receive this notification a user’s notification s ettings must be configured for the group, Windows 2012 R2 for example and a notification type of ‘Group Report Ready’. Moved <count> events from failover event queue to primary event queue. This notification message is generated when events from a temporary failover queue are moved back to the primary queue. A temporary queue is dynamically created for redundancy purpose if the primary queue fails. Moved <count> backgrounds tasks from repository to queue This notification message is generated when background tasks from a temporary failover queue are moved back to the primary queue. A temporary queue is dynamically created for redundancy purpose if the primary queue fails. Event Pipeline component down [<Component Name>]. This notification message is generated when a component fails. A component is a Change Tracker repository or queue. v8.1 Event Message Description This notification message is generated when a report Scheduled Query document size exceeds 16mb. collated from the results of a saved query is too large. Consider altering the saved query schedule or filte r The end user will need to reconfigure their queries options to produce fewer results. [<query name>] schedule to include less days or to include fewer event types – being more specific will produce fewer results. This notification message is generated when a scheduled report assigned to a Change Tracker group has completed. Netwrix Change Tracker™ - Group Report Results (Scheduled compliance report run change details) To receive this notification a user’s notification s ettings must be configured for the group, Windows 2012 R2 for example and a notification type of ‘Group Report Ready’. This notification message is generated when events from a temporary failover queue are moved back to Moved <count> events from failover event queue to the primary queue. primary event queue. A temporary queue is dynamically created for redundancy purpose if the primary queue fails. This notification message is generated when background tasks from a temporary failover queue are Moved <count> backgrounds tasks from repository moved back to the primary queue. to queue A temporary queue is dynamically created for redundancy purpose if the primary queue fails. This notification message is generated when a Event Pipeline component down [<Component component fails. A component is a Change Tracker Name>]. repository or queue. Table 1: Event Message Description Event Pipeline component is back up [<Component Name>] This notification message is generated when a component recovers. A component is a Change Tracker™ repository or queue. Error disaggregating rule result data for event <event id>, task <task id> This notification message is generated when a rule from a compliance report errors during present ation to the events list. <Device Event Description> This notification message is generated when a change is made to a device, altering a file or setting which was included in the agent’s original baseline. Events will appear for all trackers which are enabled through the configuration template attached to the device – FIM, file content, registry, audit policy changes etc. <Alert Event Description> This notification message is generated when a value that is included in the configuration template is missing on the machine being monitored. For example: a tracked registry key is missing on a 2012 R2 Server (Tracked registry value missing: ScreenSaveActive on HKEY_USERS) <Audit Event Description> This notification message is generated when changes are made to a registered agent’s details. For example: Device is added/removed from a group, the agents IP address changes or the agent’s version number changes. <Planned change name> started This notification message is generated when a scheduled planned change window opens. v8.1 Event Message Description This notification message is generated when a Event Pipeline component is back up [<Component component recovers. A component is a Change Name>] Tracker™ repository or queue. This notification message is generated when a rule Error disaggregating rule result data for event <event from a compliance report errors during present ation id>, task <task id> to the events list. This notification message is generated when a change is made to a device, altering a file or setting which was included in the agent’s original baseline. Events will <Device Event Description> appear for all trackers which are enabled through the configuration template attached to the device – FIM, file content, registry, audit policy changes etc. This notification message is generated when a value that is included in the configuration template is missing on the machine being monitored. For <Alert Event Description> example: a tracked registry key is missing on a 2012 R2 Server (Tracked registry value missing: ScreenSaveActive on HKEY_USERS) This notification message is generated when changes are made to a registered agent’s details. For example: <Audit Event Description> Device is added/removed from a group, the agents IP address changes or the agent’s version number changes. This notification message is generated when a <Planned change name> started scheduled planned change window opens. Table 1: Event Message Description <Planned change name> ended This notification message is generated when a scheduled planned change window closes. Device Online: <device name> This notification message is generated when a device starts communicating with the Change Tracker. Device Offline: <device name> This notification message is generated when a device stops communicating with the Change Tracker. New device registered: <device name> This notification message is generated when a device which hasn’t been seen before, registers with the Change Tracker server. This message should only be seen once per device. Tests syslog message from Change Tracker server This notification message is generated when a test syslog message is sent from the Change Tracker server to your specified syslog collector. This test is there to ensure that events captured byChange Tracker can be forwarded on successfully. v8.1 Event Message Description This notification message is generated when a <Planned change name> ended scheduled planned change window closes. This notification message is generated when a device Device Online: <device name> starts communicating with the Change Tracker. This notification message is generated when a device Device Offline: <device name> stops communicating with the Change Tracker. This notification message is generated when a device which hasn’t been seen before, registers with the New device registered: <device name> Change Tracker server. This message should only be seen once per device. This notification message is generated when a test syslog message is sent from the Change Tracker server Tests syslog message from Change Tracker server to your specified syslog collector. This test is there to ensure that events captured byChange Tracker can be forwarded on successfully. Agentless Script Syntax Overview Review the following for additional information: Predefined Script Variables Advanced Configuration Predefined Script Variables v8.1 Predefined Script Variables These are created by the script execution engine, and, in the case of all but $$RESULT$$, are pre-populated with the values supplied in the Credentials Key. They can be used in the script where required. $$USERNAME$$ - the user name used for initial ssh / telnet connection $$PASSWORD$$ - the password used for initial ssh / telnet connection $$USERNAME2$$ - the second level (admin / privilege) user name $$PASSWORD2$$ - the second level (admin / privilege) password $$RESULTS$$ - the variable whose contents are used as the ‘result text’ of the script. NOTE: Using multiple capturing commands with the same variable will result in the data being appended to the existing value. Script Commands A script command consists of one or more parts separated by a comma. Generally the format order is CommandText,[VariableName],[Option],[Command] where the portions in square brackets are optional and depend on the command. Example MorePrompt,-- More -- ExcludeMatchesWithComment,*** uptime line removed ***,uptime Send,\x19 Send,$$PASSWORD$$\r\n ExecuteAndCapture,$$RESULTS$$,ls -al v8.1 Notes All Commands are automatically followed by the Newline character, except for the Send command where this must be specified explicitly. This is to allow sending single characters in response to menu options etc. Commands may occur multiple times, for example to exclude multiple matching lines. Comment Line Use of # at the start of a script line will render the following text as a comment only e.g. # For information only - describes the behavior of the login script. Capture Captures the data received in the next 5 seconds into the named variable. Example to capture the login banner when placed at the head of a script e.g. Capture,$$BANNER$$ CaptureTimed Captures the data received in the specified number of seconds into the named variable. Example to capture the login banner when placed at the head of a script where this takes up to 10 seconds to appear e.g. Capture,$$BANNER$$,10 ExcludeMatchesWithComment Excludes lines matching the given regex from the output text, for example use this to exclude lines with an uptime value which would otherwise be considered a change e.g. ExcludeMatchesWithComment,*** uptime line removed ***,uptime v8.1 Execute Executes the given command and waits for one of the prompts in the received data e.g. Execute,ls –al ExecuteAndCapture Executes the given command and waits for one of the prompts in the received data. Captures the result into the given variable e.g. ExecuteAndCapture,$$WHOAMI_RESULT$$,whoami FileHashPath Defines the name and path for the NNT_FILEHASH binary to use for Agentless FIM. General best practice is to locate the NNT_FILEHASH binary in the /usr/bin folder with execute permissions set for the user account assigned to Change Tracker e.g. FileHashPath,/usr/bin/ NNT_FILEHASH_LINUX_X64 HashMatchesWithComment Hashes lines matching the given regex in the output text using a SHA256 hash, for example to hide passwords. Prefixes the hash with the comment if present e.g. HashMatchesWithComment,*** password hashed *** ,password MorePrompt Watches for the given ‘more’ prompt text in the response and sends the given text in reply e.g. MorePrompt,--More--,\n v8.1 Replace Replaces the given string in the received data with the specified replacement e.g. to replace all escape characters with: Replace,\x1B,- ReplaceCtrl Replace all ctrl characters with the specified replacement (See also: StripCtrl below) e.g. ReplaceCtrl,- Send Sends the specified characters and continues immediately. Note that control characters are represented as their ASCII hex values in the standard notation \xNN, where NN is the hex value of the character (see Wikipedia’s Control Code Chart article for additional information) e.g. to send CTRL-Y character: Send,\x19 SendCapture Sends the specified characters and captures the data received in the next 5 seconds into the named variable e.g. to pick a menu item ‘L’ and capture the result: SendCapture,$$RESULT$ $,L SendCaptureTimed Sends the specified characters and captures the data received in the specified number of seconds into the named variable. e.g.to pick a menu item ‘L’ where the response takes 20s to appear and capture the result e.g. SendCapture,$$RESULT$$,20,L v8.1 Sleep Pauses script execution for the given number of seconds e.g.: Sleep,5 StripCtrl removes all ANSI control characters from the returned data. Format is StripCtrl,ON or StripCtrl,OFF WaitFor Waits for the given text in the received data e.g.: WaitFor,Credentials WaitForPrompt Waits for any of the prompts specified from the console Prompts list or the AddPrompt commands Advanced Configuration Advanced Prompt Configuration – Using RegEx RegEx can be used to define the Prompts. By default, if any of the Prompt strings defined in the Credentials key match any part of a prompt displayed by the monitored device, this will be treated as a full prompt and the next step in the Logon script will be progressed. However, more complex Regular Expression based prompts can be defined to ‘wildcard’ sections of the prompt and to more precisely define the Prompt with a new line prefix for instances where a simple prompt (e.g. a single > or $) may appear elsewhere in the data being tracked, triggering an early termination of the tracking operation. v8.1 This prompt definition matches a sequence of ‘new line’’any characters’’-1700>’. Please contact Netwrix Support if you have any challenging prompt or logon script issues. Sample Scripts: NOTE: For script debugging and advanced scripting requirements, you may find it easier to use the ‘Script Console’ packaged with any Proxy Agent installation. You can run the Script Console from C:\Program Files\NNT Change Tracker Suite\Gen7Agent (NetCore)\NNT.Script.Console.exe program name NNT.Script.Console.exe The sample scripts provided in this section all include a Main Script and a Logon Script dialogue, however, for Production Agentless Tracker’s, the Logon script only is used within the Credentials key with the Main Script commands being configured with the relevant Configuration Template. v8.1 Match Rules Overview Review the following for additional information: File and Folder Match Filters for Inclusion and Exclusion Rules Registry Inclusion/Exclusion Match Rules File and Folder Match Filters for Inclusion and Exclusion Rules There are a range of prebuilt Match Filters provided with Netwrix Change Tracker. Enterprise which enable precision monitoring of only the attributes required (including prebuilt exclusion filters for popular AV packages that update often and create lots of 'change noise'). Often due to v8.1 paths containing a mixture of files that are to be monitored, alongside files for which changes can be ignored, it is desirable to define multidimensional rules for includes and excludes. For example, if I wish to monitor all files within a specified path and all sub-paths, I can use the built-in 'All files (recursive)' match filter. However, it may be desirable to reduce 'noise' from the route path by applying an exclusion for any changes relating to temporary files, for example, swp, swx or ~ file variants. There is actually a built-in Pathmatch Definition for this provided 'Linux temp files in folder'. However, by way of example, the example Custom Pathmatch Definition below provides this policy: Step 1 – FolderMatchType - Available options are: All|Exact Wildcards Regex Step 2 – FolderMatchExpression - Available options are: If using 'All', then use "" If using 'Exact', then specify an exact "foldername" If using 'Wildcards', then specify a separated wildcards list eg "backup*|old*" If using 'Regex', then specify a regular expression e.g., "^backup" Step 3 – FileMatchType – options the same as for the 'foldermatchtype' (All, Exact, Wildcards, Regex); Step 4 – FileMatchExpression – Available options are: If using 'All', then use "" v8.1 If using 'Exact', then specify an exact "filename" If using 'Wildcards', then specify a separated wildcards list eg "*.exe|*.dll" If using 'Regex', then specify a regular expression eg "^audit[0-9]*\.(log|txt)$". Step 5 – SubfolderRecursion – Available options are: Unlimited None (operate on specified folder only) 'n' — recurse through 1, 2 or 3 subfolders. Registry Inclusion/Exclusion Match Rules Similar to Folder/File Match Rules, Registry Key/Value Match Rules can be defined and used to precisely track only keys and values of interest. For example, tracking the ‘WinLogon’ registry key and values is important because there are a number of session management security controls defined in this key. However, in certain environments, the ‘DCacheUpdate’ values may change causing spurious alerts that are not significant from a security perspective (DCacheUpdate stores domain names in binary form for internal Winlogon programming code to use). Therefore the ability to easily track all keys and values below the Winlogon key, but exclude DCacheUpdate changes may be desirable. The ‘All Registry Values’ Match Rule is available by default but to define the ‘Isolate DCacheUpdate Value Changes’ exclusion, the following Custom PathMatch Definition would be added: Step 1 – KeyMatchType - Available options are: All; Exact; Wildcards; v8.1 Regex. Step 2 – KeyMatchExpression. Available options are: If using ‘All’, then use “”; If using ‘Exact’, then specify an exact “keyname”; If using ‘Wildcards’, then specify a separated wildcards list eg “key_abc*|key_def*”; If using ‘Regex’, then specify a regular expression eg “^S-1-5-21-[0-9]+-[0-9]+-[0-9]+-[0-9] {4,}\\Software\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop”. Step 3 – ValueMatchType. oAvailable options are:ptions the same as for the ‘foldermatchtype’ (All|Exact|Wildcards|Regex). Step 4 – ValueMatchExpression – Available options are: If using ‘All’, then use “”; If using ‘Exact’, then specify an exact “filename”; If using ‘Wildcards’, then specify a separated wildcards list eg “*.exe|*.dll”; If using ‘Regex’, then specify a regular expression eg “^audit[0-9]*\.(log|txt)$”. Step 5 – SkipRootKey – Available options are: true or false Step 6 – Subkey Recursion. Available options are: Unlimited; None (operate on specified folder only); “n” = recurse through 1, 2 or 3 subfolders. v8.1 Agent Performance Metrics This document depicts the resource usage of the Netwrix Change Tracker Gen7 Agent in its different phases (Polling, Monitoring, Stress / Load). The metrics gathered include CPU Usage, Memory Usage, Disk I/O Statistics, and Network Statistics. Server & System Specs Used For testing purposes, the following specs were granted to the following machines: Operating System: Windows Server 2016 Standard Processors: 2 Memory: 2 GB Hard Disk Space: 30 GB Operating System: Windows Server 2019 Standard Processors: 2 Memory: 2 GB Hard Disk Space: 30 GB Operating System: Windows Server 2022 Standard Processors: 2 Memory: 2 GB Hard Disk Space: 30 GB Operating System: RedHat Enterprise Linux 9 Processors: 1 Memory: 2 GB Hard Disk Space: 10 GB Table 1: Base Polling Monitoring Stress / Load CPU 3-5% 3-11% 0-2% 10-25% Memory 30-45% 50-70% 40-60% 30-80% Disk 20-50 KB/Sec 25MB-50MB/Sec 20-50 KB/Sec 20-50 KB/Sec Network 0-400 B/Sec 0-500 B/Sec 0-500 B/Sec 7500-8500 B/Sec v8.1 Operating System: Ubuntu Server 22.04 LTS Processors: 1 Memory: 2GB Hard Disk Space: 10 GB NOTE: All VMs were hosted on AWS. The specs above were sufficient enough for the tests performed and the results may differ depending on the production specs assigned within your environment. Results All measurements reflect the whole usage of the system resource, not the usage of the resource by just the agent. The Base metrics were gathered without the installation of an Change Tracker Agent. Polling is when the agent is baselining all monitored items on the system. Monitoring occurs when the agent has finished polling and is watching monitored items for change activity. Stress/Load is when the agent is reporting changes under a large amount of change action. Windows 2022 Base Polling Monitoring Stress / Load CPU 3-5% 3-11% 0-2% 10-25% Memory 30-45% 50-70% 40-60% 30-80% Disk 20-50 KB/Sec 25MB-50MB/Sec 20-50 KB/Sec 20-50 KB/Sec Network 0-400 B/Sec 0-500 B/Sec 0-500 B/Sec 7500-8500 B/Sec Table 1: Base Polling Monitoring Stress / Load CPU 0-5% 3-7% 0-4% 10-25% Memory 25-45% 50-70% 40-60% 40-85% Disk 20-50 KB/Sec 20-50 KB/Sec 25MB-50MB/Sec 25MB-80MB/Sec Network 0-100 B/Sec 0-400 B/Sec 0-400 B/Sec 7500-8500 B/Sec Table 2: Base Polling Monitoring Stress / Load Base Polling Monitoring Stress / Load CPU 0-5% 3-5% 0-5% 10-25% Memory 25-35% 50-70% 20-80% 30-80% Disk 0-40 KB/Sec 20-50 KB/Sec 0-40 KB/Sec 30-70 KB/Sec v8.1 Windows 2019 Base Polling Monitoring Stress / Load CPU 0-5% 3-7% 0-4% 10-25% Memory 25-45% 50-70% 40-60% 40-85% Disk 20-50 KB/Sec 20-50 KB/Sec 25MB-50MB/Sec 25MB-80MB/Sec Network 0-100 B/Sec 0-400 B/Sec 0-400 B/Sec 7500-8500 B/Sec Windows 2016 Base Polling Monitoring Stress / Load Base Polling Monitoring Stress / Load CPU 0-5% 3-5% 0-5% 10-25% Memory 25-35% 50-70% 20-80% 30-80% Disk 0-40 KB/Sec 20-50 KB/Sec 0-40 KB/Sec 30-70 KB/Sec Table 1: Base Polling Monitoring Stress / Load Network 0-50 B/Sec 0-400 B/Sec 150-500 B/Sec 7500-8500 B/Sec Table 2: Base Polling Monitoring Stress / Load CPU 0-3% 10-25% 10-25% 10-25% Memory 1-7% 5-15% 5-15% 10-25% Disk 1 R&W/Sec 20-50 R&W/Sec 1-6 R&W/Sec 20-50 R&W/Sec Network Table 3: Base Polling Monitoring Stress / Load Base Polling Monitoring Stress / Load v8.1 Base Polling Monitoring Stress / Load Network 0-50 B/Sec 0-400 B/Sec 150-500 B/Sec 7500-8500 B/Sec RedHat 9 Base Polling Monitoring Stress / Load CPU 0-3% 10-25% 10-25% 10-25% Memory 1-7% 5-15% 5-15% 10-25% Disk 1 R&W/Sec 20-50 R&W/Sec 1-6 R&W/Sec 20-50 R&W/Sec Network Ubuntu 22.04 Base Polling Monitoring Stress / Load Base Polling Monitoring Stress / Load Table 1: Base Polling Monitoring Stress / Load CPU 0-2% 10-25% 0-2% 10-25% Memory 1-2% 5-15% 5-15% 5-20% Disk 1-3 R&W/Sec 20-60 R&W/Sec 1-4 R&W/Sec 20-60 R&W/Sec Network 1-3 KB/Sec 10-30 KB/Sec 10-30 KB/Sec 1-30 KB/Sec v8.1 Base Polling Monitoring Stress / Load CPU 0-2% 10-25% 0-2% 10-25% Memory 1-2% 5-15% 5-15% 5-20% Disk 1-3 R&W/Sec 20-60 R&W/Sec 1-4 R&W/Sec 20-60 R&W/Sec Network 1-3 KB/Sec 10-30 KB/Sec 10-30 KB/Sec 1-30 KB/Sec Definitions Base Server Metrics These metrics were gathered on a base system, with little to no applications installed, prior to the Change Tracker agent being installed. Metrics gathered at this stage do not include the installation of the agent. Agent Polling Metrics During the initial poll of the agent, which occurs immediately after an installation or on agent start up, the agent is gathering and hashing all the monitored files and items. This state is called a Polling state, and is a state that uses slightly more resources than an agent in the Monitoring/ Resting state. The polling state tends to take anywhere from 10-30 minutes depending on system activity. Agent Resting / Monitoring Metrics This stage occurs after the poll has completed and the agent is now in a real-time monitoring state. Once the agent has hashed all the files being monitored, the agent will rest until changes are made that it needs to report. These metrics were gathered without any sort of load or stimulation of change on the system. Keep in mind that the agent can be configured to be in a v8.1 Polling state only if desired, and does not need to monitor real time if that function is not required. Agent Load / Stress Metrics This stage is the typical reflection of a very busy system. Netwrix has used an automated script that generates hundreds of file changes per second, as a way of stress testing the system to gather these metrics. Keep in mind, that in our test, a lot of the CPU Usage and other metrics that seem greatly inflated are mostly caused by the script, and the operating system itself being busy making changes. In these cases, pay attention to what the Agent itself is utilizing in terms of resources. CIS Tracking Template Description The CIS Tracking Templates are responsible for defining the monitoring of the system. By default, for Windows, the system will monitor %SYSDIR%, %WINDIR%\SysWOW64, %PROGRAMFILES%, %PROGRAMFILES(x86)%, %SYSDIR%\drivers\etc for FIM; %SYSDIR% \drivers\etc\* for File Contents; More than 60 Registry Keys; Local Accounts Tracking Enabled, and a Compliance Report was run at agent startup. For Linux Systems, the system monitors the entire /etc directory for FIM; Over 30 files for fi le contents tracking; Processes & Services Monitoring; over 90 commands being and capturing results from our process output tracker; and a compliance report was run at agent start up. Live Tracking Live Tracking is a style of tracking to capture all changes in real-time that can be set when configuring a tracking policy. See the Policy Templates: FIM File Integrity topic for additional information. Windows The Gen 7 Agent minifilter driver is a small, lightweight kernel driver used to collect real-time file I/O changes. When a Gen 7 Agent is configured for live tracking on a Windows server, it relies on the file I/O monitoring that the minifilter driver provides. The driver is installed during the installation of the Gen 7 Agent and is registered with the Windows Filter Manager when live tracking is required. See Microsoft's article Filter Manager Concepts for additional information. The Windows Filter Manager calls out to all registered drivers sequentially when any I/O activity occurs (see the diagram below). The order in which they are called is based upon a given driver’s altitude value, going from lowest to highest. The Netwrix Gen 7 Agent minifilter driver has been allocated an altitude value of 388790. This was allocated by Microsoft when the driver was submitted for approval as seen here Allocated filter altitudes – see the Activity Monitor section (NNTInfo.sys). v8.1 Common minifilter drivers that are installed on a given Windows server are those associated with Virus Scanning, Encryption and/or Continuous Backup. Many of these can lock files whilst processing the request and in some cases, such as Encryption, modify the request. NOTE: The Gen 7 Agent minifilter driver does not lock files or modify the I/O request, it simply monitors change. Logging of changes is only done for those files that meet the filter requirements of the Change Tracker Policy Tracking Template applied to the running Gen 7 Agent. For I/O changes that are part of the Tracking Template, the driver simply logs the change to a memory buffer. This memory buffer is monitored by the installed Gen 7 Agent which queries and empties it every 100 milliseconds. Neither the server nor the agent requires a restart after live tracking has been enabled. v8.1 The Change Tracker minifilter doesn't make any alterations to user requests, it only monitors I/O activity. Linux On Linux devices, The Gen 7 Agent uses Sysdig to capture low level data like who made the change. See Github's article Sysdig for additional information. v8.1 File Integrity Monitoring File Integrity Monitoring (FIM) is an essential security control that monitors and reports any change to the integrity of system and configuration files. Maintaining integrity is key because changes to files could represent a malware infection. See PCI-DSS Requirement 11.5. Policy Templates are used to configure which files are monitored for changes. FIM data is usually collected from devices with the use of an agent, but when an agentless approach to monitoring is necessary, i.e. where the endpoint is a firewall, router, switch, or simply preferred to using an agent i.e. to monitor Windows or Linux where a quick, softwarefree implementation is desirable, Netwrix Change Tracker can also operate using Agentless FIM. File change events can be viewed from the Events Tab. See the Dashboard Tab topic for additional information on how to view FIM change events. NOTE: The Events tab is designed to handle large enterprise estates with potentially thousands of events, therefore the filtering and masking of events is crucial. If you don’t see the change event as expected, make sure you have selected the right device and that your filters in the left panel are not masking the event. v8.1 Compliance The Compliance tab provides an overview of compliance scores for all devices within any selected group. The screen shows the previous 7 compliance report results to track any drift against your selected hardened build standard and whether scores are improving or worsening. Ensure Devices are maintaining compliance and track progress over time when implementing a new Hardened Build Standard. View estate/device compliance by selecting a differe nt Compliance Standard from the Compliance Report selector then drill into report results by clicking on the Report Score for any Device. Any individual report can be viewed by clicking the result score, and reports selected using the checkboxes can be exported in a range of formats (pdf, excel or csv) with an option to select more detailed results. Review the following for additional information: Overview Tab Policy Tab Details Tab Table 1: Platform Azure Microsoft 365 AWS GCP v8.1 Comparing Results By selecting any two results, either for the same device or for two different devices, the Compare Results button becomes available. This will run a compare of the two reports, useful for seeing what has caused a score to drop, or to establish what the difference is in configuration between two devices. Compliance Templates Change Tracker's compliance templates map directly to the prescriptive configura tion recommendations in the Center for Internet Security (CIS) Benchmarks List. Each Change Tracker compliance report is CIS approved. The tables below list the CIS benchmarks that have been implemented as compliance reports and the operating systems that they support. Cloud Platform Azure Microsoft 365 AWS GCP Table 1: Operating System OS Versions Windows Desktop 11, 10, 8, 7 Windows Server 2022, 2019, 2016, 2012 Table 2: Operating System OS Versions Amazon Linux 2, 2023 CentOS Workstation 8, 7, 6 CentOS Server 8, 7, 6 Debian Workstation 10, 9, 8 Debian Server 10, 9, 8 v8.1 Windows Operating System OS Versions Windows Desktop 11, 10, 8, 7 Windows Server 2022, 2019, 2016, 2012 Linux Operating System OS Versions Amazon Linux 2, 2023 CentOS Workstation 8, 7, 6 CentOS Server 8, 7, 6 Debian Workstation 10, 9, 8 Debian Server 10, 9, 8 Table 1: Operating System OS Versions Oracle Linux Workstation 7, 6 Oracle Linux Server 7, 6 Red Hat Enterprise Linux Workstation 8, 7, 6 Red Hat Enterprise Linux Server 8, 7, 6 Rocky Linux Workstation 8 Rocky Linux Server 8 SUSE Workstation 15 SUSE Server 15 Ubuntu Workstation 20.04, 18.04, 16.04 Ubuntu Server 20.04, 18.04, 16.04 v8.1 Operating System OS Versions Oracle Linux Workstation 7, 6 Oracle Linux Server 7, 6 Red Hat Enterprise Linux Workstation 8, 7, 6 Red Hat Enterprise Linux Server 8, 7, 6 Rocky Linux Workstation 8 Rocky Linux Server 8 SUSE Workstation 15 SUSE Server 15 Ubuntu Workstation 20.04, 18.04, 16.04 Ubuntu Server 20.04, 18.04, 16.04 Table 1: Operating System OS Versions IBM AIX 6.1, 5.3 Oracle Solaris 11 v8.1 Other Operating Systems Operating System OS Versions IBM AIX 6.1, 5.3 Oracle Solaris 11 Databases Database compliance templates come in three major types: RDBMS (Relational Database Management System) Windows Linux Other types exist for cloud platforms like AWS's RDS. The RDBMS template contains all of the checks done via a database connection. All other types extend this base template with checks at the OS level using shell scripts, PowerShell, etc or they override certain checks with code that is specific to the platform. The database connection only RDBMS type compliance templates enable the opportunity to support a database product on operating systems not listed below due to the lack of OS level checks. These missing OS level checks must be mitigated and there is a risk that the targeted OS caused certain checks to fail because of certain settings that are specific to that OS. Individual checks can be disabled, but mitigation would be required. Table 1: Database Database Version Compliance Template Types Microsoft SQL Server 2019 RDBMS, Windows, RDS Microsoft SQL Server 2017 RDBMS, Windows, RDS Microsoft SQL Server 2016 RDBMS, Windows, RDS Microsoft SQL Server 2014 Windows Microsoft SQL Server 2012 Windows Microsoft SQL Server 2008R2 Windows Oracle 19c RDBMS - Traditional Auditing, RDBMS - Unified Auditing, Linux - Traditional Auditing, Linux - Unified Auditing, Windows - Traditional Auditing, Windows - Unified Auditing, Oracle 12c RDBMS, Linux, Windows v8.1 Database Database Version Compliance Template Types Microsoft SQL Server 2019 RDBMS, Windows, RDS Microsoft SQL Server 2017 RDBMS, Windows, RDS Microsoft SQL Server 2016 RDBMS, Windows, RDS Microsoft SQL Server 2014 Windows Microsoft SQL Server 2012 Windows Microsoft SQL Server 2008R2 Windows RDBMS - Traditional Auditing, RDBMS - Unified Auditing, Linux - Traditional Auditing, Oracle 19c Linux - Unified Auditing, Windows - Traditional Auditing, Windows - Unified Auditing, Oracle 12c RDBMS, Linux, Windows Table 1: Operating System OS Versions Cisco IOS 17, 16, 15 F5 All Juniper All v8.1 Network Devices Operating System OS Versions Cisco IOS 17, 16, 15 F5 All Juniper All Overview Tab The concept of this page is to give an at a glance view of the trend in compliance with your adopted hardened build standard – is it being maintained or improved or in decline? Device compliance is displayed in the Compliance Report – all devices assigned the report selected will be displayed. Device/Time Filters – Content is controlled by your Device/Group/Time filters. v8.1 Dashboardlets per policy/grouping – For each group and report, an additional Dashboardlet will be displayed, allowing you to run a variety of compliance reports against the same Group of systems, for example, PCI and NIST 800-53. Risk by Group – A Risk score can be assigned via the Settings -> Groups page, this provides an added dimension to prioritize focus on groups. See the Device Groups topic for additional information. Template Management As a Center for Internet Security (CIS) Certified Vendor, Netwrix provides configuration audit reports from the acknowledged industry-authority in secure configuration guidance, the CIS Benchmarks. Many these are pre-packed with Netwrix Change Tracker but additional templates are always being produced for new or updated platforms. To import a new template or update an existing one, just upload the template: select the Overwrite checkbox option if updating. Reports Layout Templates Administration Formats used for the various reports produced by Netwrix Change Tracker Gen 7 are controlled via a series of underlying templates. New templates, or updated versions of existing templates, can be added to the system here. The Version and Change Date details for each report are displayed and when a new version is available, either after a Gen 7 version upgrade or by manually uploading a new template through the UI, this can be updated, or the current format preserved if necessary. v8.1 For report template modifications or new formats, please contact Netwrix Support. Policy Tab Detail on current and previous compliance assessments can be seen here with details of failures where they exist. Timeline– Click to see the detail for previous compliance assessments. v8.1 Group Performance – An overall comparison for all systems within the group, current and previous results. You can click on either column to see the Detail view of the selected report run. Device Scores – Bars show the distribution of device count for each scoring band, providing focus on the most common failures, click on any bar to see the Detail view of the selected score range. Options – Run a new report or view/export previous reports. Failures Analysis – Headline details of failures with the highest incidence. Details Tab Description Step 1 – Adjust Score Filters to view other score ranges. Step 2 – Click on any report score to see the full report output. Step 3 – Compare will show differences between the two report runs being reviewed. v8.1 Compare View v8.1 Full Report Agentless CIS Windows Server & Desktop Compliance Reports Removing the requirement for agents to be present on target devices has several advantages when it comes to administration, especially in a Managed Service Environment (MSP) where access to and control of target devices may be limited. This reduction in administration comes at the cost of reduced functionality and potentially a requirement for higher levels of privileges on the target machine. v8.1 The Hub does not communicate directly to target devices, so an agent is still required, but this agent can reside on the same device that the Hub is hosted on. This agent (the master proxy) will remotely communicate with devices and relay the data back to the hub. For this reason, with Netwrix Change Tracker, the term proxied device is preferred to agentless device. Functionality and Scope Currently, the only functionality for proxied Windows devices is the execution of the following Center for Internet Security (CIS) compliance reports: CIS Microsoft Windows Server 2022, 2019 CIS Microsoft Windows Desktop 11, 10 These CIS compliance reports perform all their checks via remote registry queries or security settings. Requirements and Permissions The credential used run the agent service on the master proxy device and the credential used to connect to the proxied Windows devices require domain admin privileges. Remote Registry Service The master proxy and target Windows devices require the remote registry service to be running and have remote administration enabled. This can be enabled on each device or on mass with the use of a Group Policy Object. NOTE: The remote registry service requires port 445 to be open on the target device. v8.1 Proxied Windows Device and CIS Windows Server These sections demonstrate the creation of a proxied Windows device and the execution of a CIS Windows Server report against it. This requires the existence of a device group named RemoteTest, but the steps to create it are out of scope for this guide. Windows Logon Credentials Currently Windows logon credentials are added in SSH/Telnet Credentials section of the Credentials Administration page. Step 1 – Click the Add Shell Credential (SSH/Telnet/Windows) button to open the credential creation form. v8.1 Step 2 – Name the credential. Remote Windows Test1 has been used in this example. Step 3 – Select Windows device from the top dropdown menu to populate the settings with defaults for proxied devices. The credential will now be listed in the grid. v8.1 Configure the Proxied Windows Device On the Agent and Device Administration page click the “Add Proxied Device” button on the device that will act as the master proxy. The agent on this master proxy device will make the remote calls to the proxied devices. Step 1 – Name the proxied device. Step 2 – Enter the host name or IP address of the proxied device. Step 3 – Select Windows as the device type. Step 4 – Select the credential created in the previous step. Step 5 – Add the RemoteTest group to the group list. v8.1 The proxied Windows device will now be present in the detail grid of the master proxy device. v8.1 Windows Compliance Reports The steps to create or configure a compliance report is out of scope for this guide, but the desired report must be configured to run against the RemoteTest group to ensure the proxied device, created in the previous step, is included in the report. v8.1 Execute the compliance report in the standard way. Completed compliance report: v8.1 The Windows compliance report will look the just the same as a report executed on Windows devices with agents. The details of the report will contain all passed and failed checks for the proxied Windows device. v8.1 Baseline Being the victim of a cyber attack can be scary, expensive, and potentially business-crippling. So how do you prevent a cyber attack? Start with making security a priority for all IT operations, and the first place to start is by making systems as hacker proof as possible: Gold Build Standard? Corporate Build or Hardened Build? Controlled Image? Baseline Configuration? You will find the need for a Gold Build Standard in all compliance frameworks (for example, NIST 800-53 CM-2 and CM-3, CIS Control 5.2, PCI DSS Requirement 2 and especially NERC CIP 007-3 and 010-3) as a means of guaranteeing security. Without a consistent build how else can you expect security to be maximized? Change Tracker – Automated Development and Maintenance of a Configur ation Baseline Netwrix make the entire process of creating a Hardened Build Standard, then baselining and tracking configuration drift a 'Business as Usual' process. In addition to an unlimited supply of published hardened build standards, such as the Center for Internet Security (CIS) Benchmarks or the DISA Security Technical Information Guides (STIG), now with Netwrix Change Tracker, any device can be used as a 'Baseline Source' and the specific configuration attributes required for your Baseline can be captured to create your own Gold Build Standard blueprint. A simple Wizard UI walks you through the process so anyone can be building their own personalized baseline configuration and comparing other devices within a few minutes. v8.1 Baseline Tab v8.1 Actions button: To create a new Baseline Policy, use the Actions button in the top-right hand corner of the Baselines Tab. This will prompt for a name to be assigned to the new Baseline Policy and the Baseline Wizard process will kick in. Baseline Wizard Progress Bar: Creation of a new Baseline Policy is tracked on the Baseline Wizard Progress Bar, only 8 steps needed to create a baseline policy with rules, with Baseline Source and Member Device Group created and a Baseline Report set-up. Baseline Rules: The Baseline Wizard will take you through a series of steps detailed in the next section of this guide. Once configuration items have been harvested from the Source Device, they will be displayed in the Add Rules panel. Items can be selected individually for inclusion within your Policy or use the Select All Baseline Events Matching Filter (all pages) checkbox. Rule Controls: Add Rules will add the currently selected rules to your policy with the selected Rule Options (see later section). The Edit Rules option allows an existing Policy to be edited and rules removed. v8.1 Baseline Policy Wizard New Policy: Start a new Baseline Policy Wizard and provide a name for your new Policy. Data Collection: Define the Data Collection template to be used for gathering baseline configuration data. This can be a new template, or an existing template can be re-used. The following configura tion elements to be used in Baseline policy, File System Integrity, Installed Software and Updates, Running Processes and Service states, Local User Accounts, Command Output (also allows Firewall and Router configs to be baselined) and Open Network Ports (using a local netstat or equivalent on the Host or using an NMAP Network Scan) Specify Source: A single device is selected to act as the Source for Baseline Policy data. This should be a 'Control' device or simply a "Representative Example" of what your ideal device configura tion v8.1 should be, e.g. a device that has been patched and hardened exactly as you would like every similar device to be NOTE: The selected Source device must be enabled as a "Baseline Source". You can do this via the Settings > Agent and Device screen, select the required Device click Edit. There are technical reasons why this is disabled by default; in the interests of storage and performance efficiency, it is not desirable to have every Device sending Baseline Events to the Hub unless needed. Another important decision is whether you want to include changes from Member Devices when you come to make future changes to your Baseline Policy. By default, the Source device is the single source of configuration items, both for the initial creation of the policy and going forwards, for any changes needed to the Baseline, for example, after patching when versions of software items may need to be updated. In certain situations, it may be convenient to also include changes to Member Group devices too, in which case you can check this box. v8.1 Specify Member: A single device is selected to act as an initial target against which the Baseline Policy Report can be run. The Wizard will build a Device Group for both the Source Device and the Member Device which in turn allows the Wizard to build a Baseline Report, see later section Awaiting Device: At this stage of the Baseline Wizard, we have a Source Device selected and a Data Collection template established. The Source Device Agent will call into the Hub and collect the new instruction to gather and report back on the configuration data collected. Awaiting Data: Gathering the Baseline configuration data will take anything from 90 seconds to several minutes, depending on the nature or resources of the Source Device and the scope of the Data Collection template defined. Be patient, but you can check progress using the Check Now button. Add Rules: This is the penultimate stage where you get to choose which configuration elements will form the Baseline Policy and how, in terms of the Rule Options selected. The Rule Options are what makes the Baseline Policy feature in Change Tracker so powerful. A basic compare of a Device to a predefined set of configuration rules is OK in some circumstances but rule logic is necessary to convey the other requirements needed in a Baseline Policy. v8.1 Baseline Policy Rule Options: Rule Creation Options Extend Selected Rules — Indicates whether to extend the rule to check for the old and new values, or replace the rule with one checking for the new value only Missing Value Passes — Indicates whether the rule passes if a missing item is detected (e.g., installed software item is not present on target) Add No Others Rule — Indicates whether a rule is added to the sub-section which specifies that no other items of the type should be present on the target, other than ones already specified in other rules. For example, this allows the specification of a set of rules for software versions, and the additional requirement that no other installed software be present Add Device Information Section — Indicates whether a section is added at the start of the report to describe to details of the device the report is running on, including OS and IP address details. Note that this should only be used when a Per Device Baseline Policy is being operated – for a Group-wide Baseline Policy, disable this option. v8.1 Preview Changes — Indicates whether a preview of the rule changes is presented for confirmation before they are applied. From the CIS Controls 7.1: "For a complex enterprise, the establishment of a single security baseline configuration (for example, a single installation image for all workstations across the entire enterprise) is sometimes not practical or deemed unacceptable. It is likely that you will need to support different standardized images, based on the proper hardening to address risks and needed functionality of the intended deployment. For example, a web server in the demilitarized zone (DMZ) versus an email or other application server in the internal network. The number of variations should be kept to a minimum in order to better understand and manage the security properties of each, but organizations then must be prepared to manage multiple baselines." NOTE: Just click the Query icon to get a quick tip on what the Rule Option provides. Baseline Policy Rule Options: Review and Edit Rules Edit Rules provides a means to edit or remove rules before incorporating into your baseline policy, or for managing an existing Policy. It is important to understand that during the Setup phase you are selecting items with rule logic in order to build a Netwrix policy, in effect, another Compliance Report like the hundreds of other reports Netwrix provide for CIS, NIST. PCI etc. v8.1 The Edit Rules function provides an opportunity to add a description and justification for the attribute and its inclusion in the policy. The Description is prefilled with default explanatory text for open ports and services, but this can be replaced or augmented with your own notes, important when deciding to include attributes in your baseline as any addition inevitably increases your attack surface. A minimized configuration is always the most secure. Complete: Baseline Policy creation is now complete, and you can run your first Baseline Policy report using the Run Report button Running the report will take you to the regular Reports tab, filtered to your new Baseline Policy. You can see more about scheduling and controlling reports in the main Reports section. You can now either add more devices to the Baseline Members Group or just assign the Baseline Policy to an existing group of devices, then choose your schedule and results delivery options. v8.1 Security and Change Control Using Baseline Policies Several security frameworks reference the need for change control, integrity monitoring and an established configuration standard or hardened build standard. You will find the need for a Gold Build Standard in all compliance frameworks (for example, NIST 800-53 CM-2 and CM-3, CIS Control 5.2, PCI DSS Requirement 2 and especially NERC CIP 007-3 and 010-3) as a means of guaranteeing security. Without a consistent build how else can you expect security to be maximized? The NERC CIP 010 process is shown in the diagram below and the Netwrix Baseline Configuration management process allows you to follow this cycle: Every configuration item that is included within the Baseline Policy must be essential and justified, since every decision regarding configuration will potentially increase your attack surface. Your Auditor will be looking for a fully documented Baseline Policy and the reasoning behind it. Equally any time the Baseline is extended or updated, this must be with good reason and thereafter, all systems in scope of this Baseline must be shown to be within compliance. v8.1 Baseline Overview Tab Once you have built your Baseline Policy and set-up the Baseline Report to run on a schedule you can then switch to the other Baseline Center tabs for general routine operation. You are ready to enforce compliance with your Baseline Configuration Standard! The Timeline: Each dot represents a different report run and you can review results and see how compliance with the Baseline Policy has changed over time. Group Performance: This provides a high-level view of how well your baseline configuration policy is being adhered to across the entire estate of devices. The chart is active, and you can click to drill down to the next level of detail on the Detail tab. Device Scores: This shows a deeper analysis of device compliance with the Baseline Policy, allowing an at a glance view of the distribution of device numbers in each decile band of compliance score. It is v8.1 useful for determining your strategy for remediation work identifying the number of devices in each band of compliance drift. Failures Analysis: This shows identified failures and their relative levels of incidence and also provides a good set of metrics for determining your remediation strategy e.g., which are the most important patches to apply. For the next level of detail regarding failures, either click through on any of the charts or go directly to the Detail tab. For the full report detail including details of all passes and failures then view the report – Click recent report runs to go directly to the Report Center and use the 'Compliance Detail' report. Detail Tab This provides the detail behind individual report runs and specifically shows the devices in each decile or percentile selected. See the Reports topic for the additional information about passes and failures. Manage Tab A word about remediation and change control when operating a Baseline Configuration Policy… From the CIS Controls 7.1: "Maintain an up-to-date list of all authorized software that is required in the enterprise for any business purpose on any business system” and “Ensure that unauthorized software is either removed or the inventory is updated in a timely manner". Also "verify all security configuration elements, catalog approved exceptions, and alert when unauthorized changes occur". From NERC CIP 010: "Develop a baseline configuration which shall include the following items: Operating system or firmware, commercially available or open-source application software, custom software, logical network accessible ports; and any security patches applied" then "Monitor every 35 days for changes to the baseline configuration. Document and investigate detected unauthorized changes". v8.1 In summary, the intent of this security control is to maximize security defenses and maintain them. Decide on a secure configuration (software, network ports, hardened configura tion settings) for a device, then Ensure all similar devices are compliant with your Baseline Configuration But in a contemporary IT environment, change is a constant with the need to regularly patch devices and to update configuration settings to meet changing business requirements. This means there needs to be a further step in the process to Manage the Baseline Configuration. For example, from my worked example earlier, there were three failures reported. One device was missing a required item (Notepad++) and one other device was running the wrong version of Notepad++. These failures would be remediated by installing or updating the software on the two non-compliant devices. However, there was also a third failure – Google Chrome has been reported on the same two devices at a later version than required. There are two paths to take from this: The two devices showing failures should be downgraded to match the required version, alternatively, it may be preferable to update the Baseline Configuration to embrace the newer version? This is a process known as 'promoting to the baseline' where either a new or updated element needs to be grafted into the existing Baseline to take into account changing times. Netwrix Change Tracker makes this process straightforward too, using the Manage Tab. Using the Manage Tab The Manage tab will show any exceptions identified from the last report run. Note: The Date and Time filters will be fixed and set according to the time window for the last Baseline Report run. v8.1 Baseline Exceptions Exceptions include any failures according the Baseline Policy used in the report, together with any new changes affecting the Baseline Policy referenced from the Source device (or if you have chosen to include changes from Member Devices too, these will also appear here – see earlier section regarding the Baseline Setup Wizard and the step where you are asked to 'Specify Source'. In this example we are using the default operation of only including changes originating from the Source Device for this Baseline Policy. This shows that there has been an update to the version of Google Chrome being used on this device, so this is highlighted and offered as a change that may need to be promoted to the Baseline Policy. Rule Operations: There are three choices for modifying a Baseline Policy, Extend, Add and Delete. You can also use the Rule Edit function back in the Setup tab if you want to remove an existing rule entirely. The functions are largely self-explanatory, but tips are provided if you hover over each button. Extend – Extend the existing baseline rules for this exception, in other words, promote this item as a 'valid' configuration v8.1 Add – Adds a new rule to the baseline checking for the presence of this item. Any existing rule for this item is overwritten. Delete – Removes the baseline rule so it will no longer check for this item. Note: Deleting a 'No Others' rule failure will remove all 'No Others' processing for this Tracker type. Once you have decided how you would like to handle the exceptions, you need to apply any changes required using the Apply Changes Now button. You will be prompted to enter the Business Justification for the changes as when creating the Baseline Policy originally. Viewing the Baseline Policy details To get a ‘hard copy of the Baseline Policy, you can create a Tracking Policy report based on the Baseline Policy. Go to the Reports Center and use the Actions button, then select Add Tracking Template Report. An Auditor will often ask to see what the Baseline Policy comprises, when and why changes have been made and by whom. This report provides a complete audit trail of changes as well as the breakdown of rules included in the policy. v8.1 v8.1 Cloud Tracker When it comes to Automated Container and Cloud Security Posture Management, in contrast to the agile, super-flexible container world where deployments happen at sub-second speeds, typical vulnerability scans take hours to complete. Scans are usually being performed out of hours to avoid impacting business services, so they get delayed to quiet times, overnight or at the weekend. In practice most organizations will run scans once a month at most. Equally the notion of maintaining configuration standards or standardizing on a baseline is somewhat at odds with the fluidity of contemporary IT strategies using cloud or hybrid cloud platforms. And again, the container-based Kubernetes world gives us even more configura tion data to control and secure. Despite all this, it is encouraging that the security controls mandated by NIST, PCI and the CIS among others are still fit for purpose. But operating them to keep pace let alone get out in front of IT operations is where automation and technology can play a part. The most critical of all in terms of giving most bang for buck is NNT's SecureOps™ solution which leverages intelligent Change Control for your Cloud and Container environments. NNT SecureOps™ tends to be operated right at the center of Business-as-Usual IT processes, and not only allows security standards to be maintained constantly but gives you ultimate advantage in that all-crucial early breach detection that we know can otherwise be so damaging. v8.1 Cloud Overview Tab Actions Button: To create a new Cloud Tracker report or group, click here. Risk by Group: Any Groups that have reported a score below your specified Compliance Report Score will be indicated here according to the Group's assigned Risk Score. See the Reports topic in the Netwrix Change Tracker Admin Guide for additional information. Click on any bar to see the details of poor-scoring Cloud systems. Filter Pop-out: Click in this area to reveal the Date, Time, Group, Device and Policy filters. Policy Dashboardlets: Shows current and previous scores for each policy group and an indication of whether compliance is improving, deteriating, or static, count of Cloud Systems being reported on and whether the group has met the threshold for compliance or not. Click on the Dashboardlet tile to see the details behind the policy. v8.1 Cloud Policy Tab Cloud Tab: Key Points Actions button: To create a new Cloud Policy, use the Actions button in the top-right hand corner of the Cloud Tab. This will prompt for a name to be assigned to the new Cloud Policy and the Cloud Set-up Wizard process will kick in. Cloud Policy Sub-Tabs: Switch between: Overview: See all Policies in operation Policy: Current and Past performance against Policy Detail: See individual Cloud instance scores or filter by score range Setup: Change settings for the current policy v8.1 Cloud Compliance Time Machine: Go back in time to see previous report results and configuration states for the selected Cloud Group and Policy. Group Performance: Visual representation of current and previous report results for the group, click to drill down to the next level of details. Device Scores: Visual representation of compliance across the Cloud instances within the Group under review. Each bar represents a subset of Cloud instances for the Compliance Score range. Failures Analysis: The most commonly occurring checks failing compliance rules will be highlighted here, ordered by incidence count. Cloud Policy Setup Wizard Step 1 – New Policy: Use the Actions button to start a new Cloud Tracker system set-up. Step 2 – Cloud Report Template: Templates presented here will be filtered to show all Cloud reports available in your system. Step 3 – Create a new Cloud System and Credentials: The Cloud Set-Up Wizard is contextsensitive so depending on which Cloud Platform you select will determine the Credentials dialogue you will be presented with next. Google Cloud Platform Credentials example: v8.1 NOTE: Just click the Query icon to get a quick tip on what the Credential field requires. Credential Name – Enter a name to uniquely identify these credentials Cloud Platform – Select from the drop-down options presented Description – Optionally provide a credential description Once Credentials have been entered, Change Tracker will automatically select an Agent to run the Cloud Compliance Report from and then run a test of the Credentials. By default, the Agent selected will be the local Agent on the Hub Server. NOTE: This must always be the latest Net Core Gen 7 Agent. See the Netwrix Support site for more details. This can be changed using the links displayed once the Credentials test has completed, and in the event that the Credentials are not working for any reason, you will now have the opportunity to edit them and verify they have been entered correctly. Cloud security is higher and more complex than standard access credentials for regular servers and hypervisors so please ask for help if needed! v8.1 At this point you are ready to run your first Cloud Compliance Report – just hit the Run Report button! AWS Platform Credentials Example: v8.1 Credential Name – Enter a name to uniquely identify these credentials Cloud Platform – Select from the drop-down options presented Description – Optionally provide a credential description ARN – AWS Resource Name of a role that can be assumed by a user when establishing a trust relationship. ExternalId – An Id used in establishing the trust relationship Root AccessKeyId – The Access Key Id of the AWS user the trust relationship is established for Root SecretAccessKey – The Access Key Secret of the AWS user the trust relationship is established for Special Instructions for AWS Cloud Reporting The NNT Cloud Tracker feature set utilizes the Microsoft PowerShell cmdlets for AWS. You may experience a failure message after the Credentials Test has run: "Cannot execute AWS commands, error: The specified module 'AWSPowerShell. NETCore was not loaded because no valid module file was found in any module directory". In this case it will be necessary to run the following PowerShell setup on the host running the Gen7Agent NETCore being used for Cloud Tracker work: Step 1 – Install PowerShell NETCore version 7.x (NB this is not the old PowerShell that is packaged with Windows, but a new cross-platform version based on NETCore). See the Microsoft Installing the MIS package article for additional information. Although the agent provides its own PowerShell scripting, this NETCore version of PowerShell must be installed in order that the various AWS/Azure etc. PowerShell core support libraries can be installed. These are used by some Change Tracker reports to collect data from the cloud environments. Step 2 – Install AWS Cmdlets for use in AWS compliance reports, run the following in the PowerShell NETCore command prompt (PowerShell 7(x64) Start menu item, Run As Administrator). Install-Module -name AWSPowerShell.NetCore -scope AllUsers Azure Platform Credentials Example: v8.1 Credential Name – Enter a name to uniquely identify these credentials Cloud Platform – Select from the drop-down options presented Description – Optionally provide a credential description Tenant ID – From the Azure portal, click properties and copy the Tenant Id Application ID – The Azure application (client) ID ClientSecret – The application client secret Special Instructions for Azure Cloud Reporting The NNT Cloud Tracker feature set utilizes the Microsoft PowerShell cmdlets for AWS. v8.1 You may experience a failure message after the Credentials Test has run: "Cannot execute Az commands, error on Import-Module: The specified module 'Az' was not loaded because no valid module file was found". In this case it will be necessary to run the following PowerShell setup on the host running the Gen7Agent NETCore being used for Cloud Tracker work: Step 1 – Install PowerShell NETCore version 7.x (NB this is not the old PowerShell that is packaged with windows, but a new cross-platform version based on netcore). See the Microsoft Installing the MIS package article for additional information. Although the agent provides its own PowerShell scripting, this NETCore version of PowerShell must be installed in order that the various AWS/Azure etc. PowerShell core support libraries can be installed. These are used by some Change Tracker reports to collect data from the cloud environments. Step 2 – Install Azure Cmdlets for use in Azure compliance reports, run the following in the PowerShell NETCore command prompt (PowerShell 7(x64) Start menu item, Run As Administrator): Install-Module -name Az -scope AllUsers Detail Tab Compliance Score Report: This filter is set by the way in which you access the Detail Tab. By default, the full range of devices and score ranges will be displayed but you can dial in a Compliance Score Range by using the drop-down filters. Alternatively, click through on the Device Scores bar from the Policy Tab to predefine the score range. The score for each device is linked to the full Cloud Compliance report. Cloud Tracker Reports Full overview of Reports, setup, scheduling, formatting and retention options are all covered in detail in the Change Tracker Admin Guide. v8.1 An example of the Cloud Tracker Certified CIS Compliance Report: v8.1 Integrations Netwrix Change Tracker supports the following integrations: Netwrix Products API IT Service Management Splunk VMWare Netwrix Products Netwrix Change Tracker can be configured to sent event data to the following products: Netwrix Auditor Integration – Netwrix Change Tracker can be configured to send event data collected by Change Tracker to Netwrix Auditor. Netwrix Auditor Integration The integration between Netwrix Change Tracker and Netwrix Auditor allows for any event which Change Tracker collects to be forwarded to Auditor. The type of event forwarded is controlled by the Change Tracker notification profile. v8.1 In this example notification profile, unplanned changes for systems in the Windows 2019 Auditor group and compliance reports which are run against the Windows 2019 group will generate notifications that will be pushed to Auditor. Change events are pushed to Auditor via the it's API. Once in Auditor, these events can be mined with the search functionality. Using the search option, information gathered by Change Tracker can be used to create reports and alerts or it can be merged with data natively gathered by Auditor. This integration allows Auditor to gather information on the monitored environment that it would not natively be able to collect. For example, monitoring the files of a website for change activity. Search criteria, like the one above, can be saved to generate reports or alerts. v8.1 API Customers who run multiple instances of Netwrix Change Tracker in multiple regions can use the API to pull data from each instance and use that data build global reports containing data from all instances. Agents – To pull data on agent statuses, configurations and group memberships, use the agentsRanked endpoint. Agents To pull data on agent statues, configurations and group memberships, use the agentsRanked endpoint. /api/agentsRanked This call returns a list of agent details, including group and tracking template memberships. v8.1 POST Request https://api/agentsRanked { "DeviceFilter": { "GroupNames": [], "AgentDeviceIds ": [], "AgentDisplayNames": [], "OnlineStatuses": [], "ExcludeProxiedDevices": false }, "GetAgentGroupDetails": true, "GetRelatedTemplates": true,} Parameters DeviceFilter Specifies the agents to search for by id or group membership. Type – DeviceFilter GetAgentGroupDetails Specifies a value indicating whether to get agent group details. Type – Boolean GetRelatedTemplates Specifies a value indicating whether to get templates applied to the returned agents. Type – Boolean DeviceFilter GroupNames Filters by group IDs Type – Comma separated list of strings Example – ["A99", "A101", "W43"] AgentDeviceIds Filters by device IDs v8.1 Type – Comma separated list of strings Example – ["1,1", "1,9"] AgentDisplayNames Filters by display names Type –: Comma separated list of strings Example – ["NWX-4GMJGX3", "Azure 365 Cloud Reporting Group"] OnlineStatuses Filters by online device status. Type – Comma separated list of strings Example – [ "Offline"] ExcludeProxiedDevices A value indicating whether to exclude proxied devices from the result set Type – Boolean Json Response Elements AgentGroups – A list of agent device group memberships GroupsLookup – A lookup list of group id/key to display name TemplatesLookup – A lookup list of template id/key to display name Agents – The list of agents matching the DeviceFilter AgentTemplates – A list of agent device templates Total – The number of agents matching the DeviceFilter v8.1 Example PowerShell The following PowerShell script will output the response to a CSV file with the following headers: DeviceName FQDN Groups Templates HostType AgentType Registered Os IPv4 OnlineStatus To be able to trust self-signed certificates, each call to Invoke-RestMethod is made with the SkipCertificateCheck argument. This requires PowerShell 7. # Declare script parameters and their default values. Override these def aults from the command line e.g. -HostUrl http://myliveserver/apiparam([ string]$HostUrl = "https://localhost/api", [string]$AdminUser = "admin", [string]$AdminPwd = "password")# This script is intended to read and di splay agent details, including group and tracking templatesFunction GetA dminUserSession() { $uri = "$HostUrl/auth/credentials" $params = " username=$AdminUser&password=$AdminPwd&format=json" Write-Host "Acqui ring User Session: $AdminUser ("$uri.replace("=$AdminPwd", "=******")")" $result = Invoke-RestMethod -Method Post -Uri $uri -Headers @{ Accep t = 'application/json' } -SkipCertificateCheck -SessionVariable myWebSess ion -Body $params If ($null -ne $result.UserId -and $null -ne $result .SessionId) { Write-Host "Acquired User Session: $AdminUser ( Use r Id:"$result.UserId", Session Id:"$result.SessionId")" Return $m yWebSession }}Function lookup($agentPropertyList, $agentDeviceId) { for ($i = 0; $i -lt $agentPropertyList.Length; $i++) { $element = $agentPropertyList[$i] if ($element.AgentDevice.AgentId -eq $a gentDeviceId.AgentId -and $element.AgentDevice.DeviceId -eq $agentDevice Id.DeviceId) { return $element; } }}Function lookup GrpNames($grpLookup, $grpIds) { $grpNames = New-Object "System.Collec tions.Generic.List[string]" for ($i = 0; $i -lt $grpIds.Length; $i++) v8.1 { $grpId = $grpIds[$i] for ($j = 0; $j -lt $grpLookup.Len gth; $j++) { $lookup = $grpLookup[$j] if ($lookup. Key -eq $grpId) { $grpNames.Add($lookup.Value) } } } return $grpNames;}Function lookupPCNames($agentPrope rtyList, $agentDeviceId) { $list = New-Object System.Collections.Gene ric.List[System.String] for ($i = 0; $i -lt $agentPropertyList.Length ; $i++) { $element = $agentPropertyList[$i] if ($element.A gentDevice.AgentId -eq $agentDeviceId.AgentId -and $element.AgentDevice. DeviceId -eq $agentDeviceId.DeviceId) { $list.Add($element.Na me) } } return $list}Try { # Set up a session variable f or the Admin user which can be used on subsequent requests # Use the session in future calls $myWebSession = GetAdminUserSession # csv output file name $outfile = "agentsRanked-" + (Get-Date).ToString("yyyy MMdd-hhmmss") + ".csv" # device filter to be applied $deviceFilter = "{`"DeviceFilter`": {`"GroupNames`": [],`"AgentDeviceIds`": [],`"Ag entDisplayNames`": [],`"ExcludeProxiedDevices`": false,`"OnlineStatuses` ": [`"Offline`"]},`"GetAgentGroupDetails`": true,`"GetRelatedTemplates`": true}" $uri = "$HostUrl/agentsRanked" Write-Host("Reading Agents: ( $uri ) writing to ( $outfile )") $result = Invoke-RestMethod -Metho d Post -ContentType application/json -Uri $uri -SkipCertificateCheck -Hea ders $headers -Body $deviceFilter -WebSession $myWebSession $agents = @() foreach ($item in $result.Agents) { # find groups and temp lates from other parts of the response $groups = lookup $result.A gentGroups $item.AgentDevice $groupNames = lookupGrpNames $result .GroupsLookup $groups.MemberOf $groupsText = ""; if ($null ne $groups) { $groupsText = $groupNames -join "," } $templates = lookup $result.AgentTemplates $item.AgentDevice $templatesText = ""; if ($null -ne $templates) { $t emplatesText = $templates.ConfigTemplates -join "," } # add custom object to array so CSV format works as expected $agents + = [PSCustomObject]@{ DeviceName = $item.DeviceName FQDN = $item.FullyQualifiedDomainName Groups = $groupsText Templates = $templatesText HostTy pe = $item.HostType AgentType = $item.AgentType Registered = $item.Registered Os = $item.Os IPv4 = $item.IPv4 OnlineStatus = $item.Onl ineStatus } } # write out to a csv $agents | Export-Csv Path $outfile -Delimiter "," -Encoding UTF8 -NoTypeInformation # to w rite out the raw json of the response # $jsonOutfile = "agentsRanked-" + (Get-Date).ToString("yyyyMMdd-hhmmss") + ".json" # $result | Conve rtTo-Json -depth 100 | Out-File $jsonOutfile}Catch [Net.WebException] { $resp = $_.Exception.Response; If ( $resp.StatusCode -eq [Net.HttpS tatusCode]::BadRequest ) { $result = (New-Object IO.StreamReader( $resp.GetResponseStream())).ReadToEnd() | ConvertFrom-Json; # Han dle errors Write-Output $_.Exception } Else { # Hand le errors Write-Output $_.Exception }} v8.1 IT Service Management The aim of integration with IT Service Management (ITSM) systems is to correlate change events, that occur within the IT environment, with those that were planned and approved in the ITSM system. Change Management is a quintessential component of any service management strategy. Change Management is the process of implementing changes relative to an authorized work order that incorporates a release, build, test, schedule, and deployment plan. By integrating Netwrix Change Tracker with ITSM systems, organizations can address Change Management while eliminating the change noise. This way, unplanned change alerts become a prioritized list of potentially malicious events to be reviewed and remediated. The Sync Service The Gen 7 Sync Service synchronizes Change Requests (CR’s, RFC’s, etc) into Change Tracker from one of several supported ITSM systems. These CRs take the form of a Planned Change once imported into Change Tracker. Change Tracker will attempt to link existing Devices and Groups to a Planned Change where similar names are found to Configuration Items (CMDB items) in the ITSM system. See the Planned Changes Tab topic for additional information. The service works by periodically polling the source ITSM system for Change Requests which have been modified since the most recent poll. A new Planned Change is created in Change Tracker if a new CR has been added to the source system; modifications to an existing CR will be used to update the corresponding Planned Change. In either case, any events which fall within the scope of the Planned Change will be reassessed. Change events will not be linked to a planned change until the RFC has been approved in the ITSM. For this reason, RFCs should be created and approved before any changes are made, otherwise they will appear as unplanned. Retrospectively approving an RFC will cause the change events to be reassessed and marked as planned in Change Tracker, but the alerts would already have been sent. Supported ITSM Platforms BMC Remedy Service Management Cherwell Service Management ManageEngine ServiceDesk Plus v8.1 Samanage Service Platform ServiceNow ServiceManagement SunView ChangeGear OpenText Service Management ServiceNow Features The following features are currently exclusive to the ServiceNow integration. Device Discovery Instead of maintaining a list of all your servers, desktops and switches in ServiceNow and Change Tracker, it is possible to synchronize configuration items from ServiceNow to Change Tracker as devices. Not only does this give you a single place to maintain that list (ServiceNow), it also speeds up initial setup of Change Tracker. When devices are created via Device Discovery from ServiceNow, the configuration items from RFCs are matched to devices in Change Tracker on their ServiceNow Id, ensuring a perfect match. Synchronization of the AssignedTo field Typically the Sync Service will create a planned change in Change Tracker that includes the following fields from the ITSM: Id, planned start date, planned end date and configuration item. For ServiceNow the AssignedTo field can be synchronized to planned changes. If change events are recording who made the change, then a planned change ruleset can be created that will ensure that change events are only marked as planned when they match an planned change on date, device, and user. RFC Task Synchronization In ServiceNow it is possible to add tasks for different people to an RFC. If the Sync Service detects an RFC with tasks it will create a planned change for each task. If the planned start date, planned end date, configuration item or assigned to fields are empty on the task then the matching values at the parent RFC level will be used. Raising Incidents To close the loop of change management someone who can act must be alerted of unplanned changes so they can be investigated and resolved appropriately. A great option for unplanned change alerts is to raise an incident in ServiceNow which will alert the owner of the matching configuration item and provide a work flow to resolve the situation. v8.1 Sync Service Installation The Sync Service is installed as a Windows service. Currently only a single instance of the service is supported. Run the installer executable, following the installer wizard steps in turn. Requirements Windows Server 2022 Change Tracker 8 Upgrading Existing Installations Normally the upgrade process is as simple as running the new installer and clicking next until the end. Previously configured values will be the default values (existing passwords will not be visible). Version 2.2 is the exception. When upgrading to 2.2 or higher, installations prior to 2.2 must be uninstalled first by using the unins000 application in C:\Program Files\NNT Change Tracker Suite\Gen7SyncService. Make a copy of the Gen7SyncService.exe.config file as this will contain all the settings for the Sync Service. The following folders should then be removed: C:\Program Files\NNT Change Tracker Suite\Gen7SyncService C:\Program Data\NNT\syncservice You can then proceed with a normal install. Replace the contents of the Gen7SyncService.dll.config file with the contents of the c onfig file backed up earlier. If no backup is available then enter new configuration during the install wizard. Select Components Under the “ITSM Integration” option, select one ITSM system to integrate with. For brevity this document describes the steps for a ServiceNow setup, but the steps vary little between ITSMs. v8.1 Change Tracker Hub Connection Enter the required configuration values: v8.1 In the “Hub Server URL” field, specify the URL for your Change Tracker REST API endpoint, e.g. https://changetracker-server/api In the “Sync service username” and “Sync service password” fields, enter the credentials for the Change Tracker user account which the service should use to connect to Change Tracker; it is recommended that a user account be created specifically for this purpose. Note: Change Tracker includes an “ITSM” role which is preconfigured with the necessary permissions. Authentication Select which type of authorization to use: v8.1 Basic (provide Username / Password of a ServiceNow user account only). Use when OAuth authorization is not available. The encoded credentials are sent in the headers of every HTTP request. OAuth2 Resource Owner Password Flow (provide Username / Password of a ServiceNow user account, and Client ID / Client Secret of a ServiceNow OAuth application). Use when using an OAuth application registration native to ServiceNow. OAuth2 Client Credentials Flow (provide Client ID / Client Secret of an OAuth application). Use if required by an OAuth application not registered with ServiceNow e.g. Apigee. ITSM URLs Enter the require configuration values: v8.1 In the “ServiceNow ITSM Server URL” field, specify the URL for your ServiceNow REST API endpoint, e.g. https://service-now-server/api In the “ServiceNow OAuth2 Token URL” field (not applicable if using Basic Authentication), specify the URL for your OAuth2 token endpoint, e.g. https://service-now-server/ oauth_token.do ITSM Account A ServiceNow account must be created specifically for the Sync Service to connect with. The Sync Service must be configured to use the same time zone as this ServiceNow account. Because UTC is not an option for a user's time zone in ServiceNow, the Sync Service defaults to GMT. The only requirement here is for the time zones to match, so the easiest approach is to use GMT for the ServiceNow user, but it is possible to configure the Sync Service to use a v8.1 different time zone by setting the serviceNow.timeZone element in the Sync Service configuration file (see the administration page for instructions). In the “ServiceNow ITSM username” and “ServiceNow ITSM password” fields (not applicable if using OAuth2 Client Credentials), enter the credentials for the ServiceNow user account which the service should use to connect to ServiceNow. In the “ServiceNow OAuth2 Client ID” and “ServiceNow OAuth2 Client Secret” fields (not applicable if using Basic Authentication), enter the Client ID and Client Secret associated with the OAuth application registration. Sync Service Administration For most use cases of the Sync Service, installation is all the configuration and administration required. For advanced setups, there is a set of options available in the configuration file which are listed at the end of this document. v8.1 ServiceNow Features The ServiceNow integration has additional features due to it's popularity. Configure Device Discovery Instead of maintaining a list of all your servers, desktops and switches in ServiceNow and Change Tracker, it is possible to synchronize configuration items from ServiceNow to Change Tracker as devices. Not only does this give you a single place to maintain that list (ServiceNow), it also speeds up initial setup of Change Tracker. When devices are created via Device Discovery from ServiceNow, the configuration items from RFCs are matched to devices in Change Tracker on their ServiceNow Id, ensuring a perfect match. Agentless monitoring (via a proxy agent or Splunk) has always required the manual creation of devices for change events to be linked to. Device discovery removes this manual configuration. Follow the steps to configure Device Discovery. v8.1 Step 1 – From the Settings menu, select Credentials, scroll to the ITSM System Credentials section and click Add ITSM Credential. Step 2 – Select ServiceNow from the initial drop down and enter the details of the ServiceNow instance to connect to. By default Change Tracker will look for devices in the cmdb_ci_computer table in ServiceNow's CMDB. The Device Discovery Path field can be used to specify a different table to pull devices from. v8.1 The Device Discovery Name Regex Replace Pattern field is used to define a piece of regex that can identify a pattern in device names that the user would like to not include or to replace with something else when the devices are created in Change Tracker. This can be useful when there is not an exact match between device names in the change events and device names in ServiceNow. The Device Discovery Name Regex Replacement fields defines the value to replace the pattern defined in the field above. Leaving this empty will cause the pattern matched by the regex above to be trimmed from device names created in Change Tracker. Step 3 – Select a device to act as the proxy for the calls made to ServiceNow. The agent on the same host as the Hub is often a good choice here. Step 4 – Select the credentials created earlier. Step 5 – Select the group to put the discovered devices into. v8.1 Step 6 – Click OK. A discovery task will start and create the devices. Raise a ServiceNow Incident To close the loop of change management someone who can act must be alerted of unplanned changes so they can be investigated and resolved appropriately. A great option for unplanned v8.1 change alerts is to raise an incident in ServiceNow which will alert the owner of the matching configuration item and provide a work flow to resolve the situation. Follow the steps to raise a ServiceNow incident. Step 1 – From the Settings menu, select System Settings and scroll to the ServiceNow Integration section. Insert the URL and credentials of the ServiceNow instance to raise incidents to. The test button will raise a test incident to prove connectivity. Table 1: Key Notes restSyncProvider.retryTimes Byte (default: 3, max: 255) Determines how many times a failed REST request is retried before being abandoned. v8.1 Step 2 – Select the device group you want to raise incidents for (All devices is the common choice), select the Un-planned Change Notification Type and select ServiceNow as the notification Method. Configuration Options Key Notes Byte (default: 3, max: 255) Determines how many restSyncProvider.retryTimes times a failed REST request is retried before being abandoned. Table 1: Key Notes restSyncProvider.retryMilliseconds Integer (default: 250) Determines the delay in milliseconds between retries of failed REST requests. restSyncProvider.startSyncTimeUtc DateTime (default: current UTC date / time written by installer e.g., “2023-03-27T17:56:30”) Typically used by SyncAdapters as a chronological start point when first requesting incremental changes. changeTracker.getEventsStartTimeSpan TimeSpan (default: 7.00:00:00, equivalent to 7 days) When submitting / re-submitting events for a Planned Change whose Start Time is set to continuous, this determines the actual Start Time used changeTrackerPlannedChangeRestSyncAdapter.usePl annedChangeRulesetName String (e.g., “MyRuleSet”) Nominates a planned change ruleset to be used as the criteria when matching events to planned changes. By default events would be matched by date and device. This setting allows events to be matched on any field. An example would be to match the event's Who Made The Change (WMTC) to the planned change's Assigned To field to ensure the change was done by the person expected. changeTrackerPlannedChangeInstanceRestSyncAdap ter.requireMembers Boolean (default: false) Determines whether linked members (Devices or Groups) are a requirement for a Planned Change to be created. Default setting (false) is recommended while establishing that the service is working correctly. Note: production systems should have this setting set to true, since a Planned Change which has no linked members will never capture any events, hence is redundant. v8.1 Key Notes Integer (default: 250) Determines the delay in restSyncProvider.retryMilliseconds milliseconds between retries of failed REST requests. DateTime (default: current UTC date / time written by installer e.g., “2023-03-27T17:56:30”) Typically used restSyncProvider.startSyncTimeUtc by SyncAdapters as a chronological start point when first requesting incremental changes. TimeSpan (default: 7.00:00:00, equivalent to 7 days) When submitting / re-submitting events for a Planned changeTracker.getEventsStartTimeSpan Change whose Start Time is set to continuous, this determines the actual Start Time used String (e.g., “MyRuleSet”) Nominates a planned change ruleset to be used as the criteria when matching events to planned changes. By default events would be matched by date and device. This changeTrackerPlannedChangeRestSyncAdapter.usePl setting allows events to be matched on any field. An annedChangeRulesetName example would be to match the event's Who Made The Change (WMTC) to the planned change's Assigned To field to ensure the change was done by the person expected. Boolean (default: false) Determines whether linked members (Devices or Groups) are a requirement for a Planned Change to be created. Default setting (false) is changeTrackerPlannedChangeInstanceRestSyncAdap recommended while establishing that the service is ter.requireMembers working correctly. Note: production systems should have this setting set to true, since a Planned Change which has no linked members will never capture any events, hence is redundant. Table 1: Key Notes changeTrackerRestSyncProvider.baseUrl String (e.g., “https://localhost:5001/api”) The base URL for the REST API endpoint. All REST requests will be made relative to this URL. changeTrackerRestSyncProvider.userName String (e.g., “itsm”) The username of the account used to connect to Change Tracker. Note: While an “itsm” role is created in Change Tracker which has the appropriate permissions, no user is assigned to this role by default. changeTrackerRestSyncProvider.password String (e.g., “password”) The password of the account used to connect to Change Tracker. Note: This s etting is encrypted by the service and written back to the config file under the key “E. changeTrackerRestSyncProvider.password” serviceNow.deviceClassNames String (e.g., “cmdb_ci_win_server,cmdb_ci_linux_server”, default: “”) Optional comma-separated whitelist of Configuration Item class names (sourced from the cmdb_ci.sys_class_name property) which restricts which CIs can be mapped to a Device in Change Tracker. serviceNow.groupClassNames String (default: “”) Optional comma-separated whitelist of Configuration Item class names (sourced from the cmdb_ci.sys_class_name property) which restricts which CIs can be mapped to a Group in Change Tracker. A value of DO_NOT_MATCH disables the group lookup if the device name is not found. v8.1 Key Notes String (e.g., “https://localhost:5001/api”) The base changeTrackerRestSyncProvider.baseUrl URL for the REST API endpoint. All REST requests will be made relative to this URL. String (e.g., “itsm”) The username of the account used to connect to Change Tracker. Note: While an “itsm” changeTrackerRestSyncProvider.userName role is created in Change Tracker which has the appropriate permissions, no user is assigned to this role by default. String (e.g., “password”) The password of the account used to connect to Change Tracker. Note: This s etting changeTrackerRestSyncProvider.password is encrypted by the service and written back to the config file under the key “E. changeTrackerRestSyncProvider.password” String (e.g., “cmdb_ci_win_server,cmdb_ci_linux_server”, default: “”) Optional comma-separated whitelist of serviceNow.deviceClassNames Configuration Item class names (sourced from the cmdb_ci.sys_class_name property) which restricts which CIs can be mapped to a Device in Change Tracker. String (default: “”) Optional comma-separated whitelist of Configuration Item class names (sourced from the cmdb_ci.sys_class_name property) which serviceNow.groupClassNames restricts which CIs can be mapped to a Group in Change Tracker. A value of DO_NOT_MATCH disables the group lookup if the device name is not found. Table 1: Key Notes serviceNow.timeZone String (e.g., “Eastern Standard Time”, default: “”) Optional time zone taken from this list, which should match the time zone of the account used to connect to ServiceNow. Note: this should be used where it’s not possible to set the account to use GMT. serviceNowChangeRequest.createplannedchangeper task Boolean (default: false) When true, any RFC in ServiceNow that has tasks against it will result in a planned change for each task. If start or end times are missing on the tasks they will be taken from the parent RFC. serviceNowChangeRequestRestSyncAdapter.changes Url String (e.g., “https://site.service-now.com/api/now/ table/change_request”, default: “”) Optional absolute URL for the REST API endpoint from which to retrieve Change Requests. serviceNowChangeRequestRestSyncAdapter.taskCiUr l String (e.g., “https://site.service-now.com/api/now/ table/task_ci”, default: “”) Optional absolute URL for the REST API endpoint from which to retrieve Configuration Items linked to Change Requests. serviceNowChangeRequestRestSyncAdapter.getIncre mentalChangesFilter String (e.g., “approvalINapproved,withdrawn,reverted”, default: “”) Optional filter which can be used to restrict the Change Requests retrieved from ServiceNow during the periodic polling for modified entries. serviceNowImportJob.intervalMilliseconds Integer (default: 30000, equivalent to 30 seconds) Optional setting which can be used to determine the frequency of the periodic polling for modified entries. v8.1 Key Notes String (e.g., “Eastern Standard Time”, default: “”) Optional time zone taken from this list, which should serviceNow.timeZone match the time zone of the account used to connect to ServiceNow. Note: this should be used where it’s not possible to set the account to use GMT. Boolean (default: false) When true, any RFC in ServiceNow that has tasks against it will result in a serviceNowChangeRequest.createplannedchangeper planned change for each task. If start or end times are task missing on the tasks they will be taken from the parent RFC. String (e.g., “https://site.service-now.com/api/now/ serviceNowChangeRequestRestSyncAdapter.changes table/change_request”, default: “”) Optional absolute Url URL for the REST API endpoint from which to retrieve Change Requests. String (e.g., “https://site.service-now.com/api/now/ serviceNowChangeRequestRestSyncAdapter.taskCiUr table/task_ci”, default: “”) Optional absolute URL for l the REST API endpoint from which to retrieve Configuration Items linked to Change Requests. String (e.g., “approvalINapproved,withdrawn,reverted”, default: serviceNowChangeRequestRestSyncAdapter.getIncre “”) Optional filter which can be used to restrict the mentalChangesFilter Change Requests retrieved from ServiceNow during the periodic polling for modified entries. Integer (default: 30000, equivalent to 30 seconds) serviceNowImportJob.intervalMilliseconds Optional setting which can be used to determine the frequency of the periodic polling for modified entries. Table 1: Key Notes serviceNowRestSyncProvider.baseUrl String (e.g., “https://site.service-now.com/api”) The base URL for the REST API endpoint. All REST requests will be made relative to this URL, unless “serviceNowChangeRequestRestSyncAdapter.changes Url”, “serviceNowChangeRequestRestSyncAdapter.taskCiUrl ” or “serviceNowRestSyncProvider.accessTokenUrl” are specified (which take precedence as absolute URLs) serviceNowRestSyncProvider.authType Integer, Enum (default: 0) Determines which type of authentication is used when connecting to ServiceNow: · 0 = Basic Authentication (requires userName and password) · 1 = OAuth2 Password Grant (requires userName, password, clientId and clientSecret) · 2 = OAuth2 Client Credentials Grant (requires clientId and clientSecret) serviceNowRestSyncProvider.userName String (e.g., “itsm”) Optional, depending on “authType”. The username of the account used to connect to ServiceNow. serviceNowRestSyncProvider.password String (e.g., “password”) Optional, depending on “authType”. The password of the account used to connect to ServiceNow. Note: This setting is encrypted by the service and written back to the config file under the key “E.serviceNowRestSyncProvider.password” serviceNowRestSyncProvider.accessTokenUrl String (e.g., “https://site.service-now.com/ oauth_token.do”) Optional, depending on “authType”. v8.1 Key Notes String (e.g., “https://site.service-now.com/api”) The base URL for the REST API endpoint. All REST requests will be made relative to this URL, unless “serviceNowChangeRequestRestSyncAdapter.changes serviceNowRestSyncProvider.baseUrl Url”, “serviceNowChangeRequestRestSyncAdapter.taskCiUrl ” or “serviceNowRestSyncProvider.accessTokenUrl” are specified (which take precedence as absolute URLs) Integer, Enum (default: 0) Determines which type of authentication is used when connecting to ServiceNow: · 0 = Basic Authentication (requires userName and password) · serviceNowRestSyncProvider.authType 1 = OAuth2 Password Grant (requires userName, password, clientId and clientSecret) · 2 = OAuth2 Client Credentials Grant (requires clientId and clientSecret) String (e.g., “itsm”) Optional, depending on serviceNowRestSyncProvider.userName “authType”. The username of the account used to connect to ServiceNow. String (e.g., “password”) Optional, depending on “authType”. The password of the account used to serviceNowRestSyncProvider.password connect to ServiceNow. Note: This setting is encrypted by the service and written back to the config file under the key “E.serviceNowRestSyncProvider.password” serviceNowRestSyncProvider.accessTokenUrl String (e.g., “https://site.service-now.com/ oauth_token.do”) Optional, depending on “authType”. Table 1: Key Notes Absolute URL for the REST API endpoint from which to retrieve OAuth2 tokens. serviceNowRestSyncProvider.clientId String (e.g., “8b466c8147bd21609527f6e9a0ef4301”) Optional, depending on “authType”. The client ID of the OAuth application, defined in ServiceNow. serviceNowRestSyncProvider.clientSecret String (e.g., “0aZbfubF7A”) Optional, depending on “authType”. The client secret of the OAuth applica tion, defined in ServiceNow. Note: This setting is encrypted by the service and written back to the config file under the key “E.serviceNowRestSyncProvider.clientSecret” serviceNowRestSyncProvider.origin String (e.g., “ServiceNow”) Optional. Used to tag any entities created by the service v8.1 Key Notes Absolute URL for the REST API endpoint from which to retrieve OAuth2 tokens. String (e.g., “8b466c8147bd21609527f6e9a0ef4301”) serviceNowRestSyncProvider.clientId Optional, depending on “authType”. The client ID of the OAuth application, defined in ServiceNow. String (e.g., “0aZbfubF7A”) Optional, depending on “authType”. The client secret of the OAuth applica tion, serviceNowRestSyncProvider.clientSecret defined in ServiceNow. Note: This setting is encrypted by the service and written back to the config file under the key “E.serviceNowRestSyncProvider.clientSecret” String (e.g., “ServiceNow”) Optional. Used to tag any serviceNowRestSyncProvider.origin entities created by the service Splunk Splunk is used to store logs from devices, databases and applications. Capturing changes to device configuration, from logs in Splunk, provides a form of agentless monitoring with the ability to monitor devices that are not currently supported by Change Tracker. This means anything that can reliably log it's configuration changes to Splunk can be monitored by Change Tracker, including custom applications. A fully customizable Search Processing Language (SPL) query, executed via the Splunk API, will return specific logs that are converted to change events in Change Tracker. From this point on, these change events will behave as if they were produced by a traditional agent. Permissions required for the Splunk can be found in the Authentication and Authorization section of the Splunk Documentation page. See Splunk's REST API User Manual article for additional information on permissions. v8.1 Configure Credentials Follow the steps to configure Splunk credentials. Step 1 – From the Settings menu select Credentials and scroll to the Splunk Credentials section. Step 2 – Click the Add button and enter the details of the Splunk instance to connect to. Step 3 – Click Update. The Splunk credentials are updated. Policy Templates Policy templates are used to configure what to monitor on the target devices. For Splunk a policy template that defines an SPL query is required. Splunk's SPL query language is similar to SQL in that it is very flexible when defining the data to query, how to filter it and what transformations are required like column aliases. v8.1 Create an SPL Query RECOMMENDED: It is recommended to develop and test the SPL query in Splunk's Search page. The query must return fields with the following aliases: device whomadethechange eventdate eventinfo The value in the eventdate field must be formatted as YYYY-mm-ddTHH:MM:SS. The strftime function can be used to format date time fields accordingly: strftime(MyDateTimeField,"%Y-%m- %dT%H:%M:%S.%Q"). Any further fields added will be included in the body of the events when the reach Change Tracker. Sourcetype is an example of such a field in the test query below. Below is the test query used in this document. This query pulls internal Splunk data that any instance will have while meeting Change Tracker's requirements. The "head 50" clause at the end of the statement ensures that only 50 rows are returned. search index=_internal event_message != "" | rename host as device | ev al whomadethechange = "test-user" | eval eventdate=strftime(_time,"%Y-% m-%dT%H:%M:%S.%Q") | rename event_message as eventinfo | table device w homadethechange eventinfo eventdate sourcetype | head 50 v8.1 Create the Policy Template Follow the steps to create a policy template. Step 1 – From the Settings menu, select Policy Templates. Step 2 – Click Actions and Add a Blank Policy Template. Step 3 – Name it Splunk, set the Usage column to Tracking, and click update. Step 4 – Click the tracking button on the new Splunk policy and then scroll right to the Splunk Search Queries tab. v8.1 Step 5 – Click the tick box to add a query and then click Add a Splunk Query. v8.1 Paste the query, give it a description and click Update. The query will now be listed in the policy. NOTE: Ensure the desired polling frequency is set. Devices and Groups Follow the steps to add a group. Step 1 – From the Settings menu, select Groups and click Add to add a new group called Splunk Tracker. Step 2 – Select Splunk Tracker in the group tree; then click the Policy Templates tab and click Add an Existing Template. Step 3 – Add the Splunk policy template to the Splunk Tracker group. v8.1 Any device in this group of the type Splunk will execute the Splunk tracking policy created above. v8.1 Step 4 – Ensure the Splunk Tracker group is selected and click Add to add a sub group to the Splunk Tracker group named Splunk devices. This group will hold the proxied devices that Splunk events will be matched to. Devices To direct the SPL query in the Splunk tracking policy to the target instance of Splunk, a proxied device must be created with the connection details. Follow the steps to manually create a proxied device to represent the target instance of Splunk. v8.1 Step 1 – Select a device to be a proxy device and click Add Proxied Device. The agent on the same machine as the Hub is often a good choice for the proxy if it can communicate with the Splunk instance. Step 2 – Name the proxy device Splunk. Step 3 – Enter the URL for the Splunk instance in the Host field. Step 4 – Set the device type to Splunk. Step 5 – Select the Splunk credentials. Step 6 – Add the Splunk Tracker group to the Groups field. v8.1 NOTE: Change events coming into Change Tracker (from Splunk or any agentless monitoring) must match a device in Change Tracker. Events without a matching device will be ignored This isn't a problem with agent based monitoring as the agent registers it's device on fi rst contact with the Hub. All types of agentless monitoring require devices to be created in Change Tracker. Devices can be created manually or via device discovery. Device discovery is only available when the Sync Service is configured to integrate with ServiceNow. Both will result in proxied devices registered to a proxy device with an agent. v8.1 To discover devices to match change events from Splunk, see the Configure Device Discovery section in Sync Service Administration topic for additional information. To manually create proxied devices, select a device to be a proxy device (the Hub's agent is often a good choice here) and click Add Proxied Device. Ensure the new devices are added to the Splunk Devices group. If the logs collected are from a custom application it may be desirable to treat the application as a device in Change Tracker instead of it's individual servers. This way change events would belong to the application and not to individual servers. This could be done by manually creating a proxied device named after the application and then ensuring the SPL query uses the same application name for it's Device column. Events If everything has been configured correctly and communication with the Splunk instance is possible, Splunk logs should start arriving as events. v8.1 In the body of a Splunk event it's possible to see the required firled from the SPL query. Any field in the results other than the required fields is added to the additional info section at the bottom of the event body. This flexible field can list multiple non required fields from the SPL query. This enables full control of what is logged into the events. Manual runs of the tracking policy can be executed from the Splunk device by clicking Start Tracker Poll. v8.1 VMWare vSphere is VMWare's virtualization platform. Change Tracker includes CIS certified compliance tracking templates to ensure secure configuration of vSphere clusters and their ESXi nodes. vSphere/ESXi Compliance reports for vSphere clusters and their ESXi nodes are executed in an agentless manor with the use of a proxy agent that has vSphere clusters (or individual ESXi servers) configured as proxied devices. Requirements for the Proxy Agent's Device .NET 6 PowerShell 7 PowerShell Module VMWare.PowerCLI Gen 7 Agent v8.1 Installation After installing .NET 6 and the Gen 7 Agent, following the instructions below will ensure the proxy agent's device is able to communicate with vSphere and ESXi devices. Open a PowerShell console as Administrator to run the following command: Install-Module VMware.PowerCLI -Scope AllUsers Check installation with: Get-PowerCLIVersion If self-signed certificates are in use with vCenter, the following command will ignore the errors this usually raises: Set-PowerCLIConfiguration -InvalidCertificateAction:Ignore -Scope AllUsers To disable the customer experience program run the following command: Set-PowerCLIConfiguration -Scope AllUsers -ParticipateInCEIP $false Configuration Follow the steps to configure ESXi/vCenter credentials: Step 1 – From the Settings menu, select Credentials and scroll down to the ESXi / vCenter Credentials section. Step 2 – Click the Add button and enter the credential information. For vCenter / ESXi monitoring, it is recommended to use vCenter as the Host Type as it allows for ESXi node discovery, The ESXi Host Type option enables connections to stand alone ESXi servers. v8.1 Device Discovery A vSphere cluster is made up of ESXi nodes. In the past, each ESXi node had to be manually added as a proxied device. It is now possible to add the vSphere service as a proxied device and automatically discover all of it's ESXi nodes and add them as proxied devices. This allows for faster configuration and the ability to keep up with fast changing environments where ESXi nodes are frequently created, removed or even migrated between clusters. From the Settings menu, select Device Discovery. Select ESXi / vCenter Discovery from the drop down to configure the discovery job. Discovery Device is the device running the agent that will execute the commands to discover the ESXi nodes. Parent Device in Hub is the proxy device that the proxied devices (that represents the ESXi nodes) will be registered under. Usually Discovery Device and Parent Device in Hub use the v8.1 same agent, but different discovery jobs executed by different proxy agents could be configure d to register all of their discovered nodes under one proxy agent. The "Assign to Group" drop down is the group the discovered ESXi nodes will be assigned to. There is no automatic registration so a group must be chosen. Once configured a discovery job will automatically run and if successful, the devices will be visible in the grid. v8.1 Compliance Reporting Under the Reports tab, it is now possible to configure and run the appropriate compliance report against the group that contains the ESXi devices. v8.1