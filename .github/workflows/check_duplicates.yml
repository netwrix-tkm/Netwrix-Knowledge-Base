name: Check for Duplicate Articles

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'knowledge_base/**'
      - '.github/workflows/check_duplicates.yml'
      - '.github/workflows/detect_duplicates.py'

# Required to post comments on PRs
permissions:
  pull-requests: write
  contents: read

jobs:
  check-duplicates:
    name: Check for duplicate articles
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for the repository

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install beautifulsoup4 scikit-learn pandas requests
        
    - name: Run duplicate detection and generate report
      id: duplicates
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_HEAD_REF: ${{ github.head_ref || '' }}
        GITHUB_BASE_REF: ${{ github.base_ref || '' }}
      run: |
        # Install required Python packages
        python -m pip install beautifulsoup4 scikit-learn pandas requests
        
        # Create a temporary directory for the report
        mkdir -p /tmp/qa-reports
        
        # Run the duplicate detection script and save output to a temp file
        python .github/workflows/detect_duplicates.py \
          --threshold 0.6 \
          --output-format both \
          --github-token ${{ secrets.GITHUB_TOKEN }} \
          --github-event-path ${{ github.event_path }} > /tmp/qa-reports/report.json
        
        # The script will handle PR comments
    
    - name: Upload QA Report
      if: always()  # Run this step even if previous steps fail
      uses: actions/upload-artifact@v3
      with:
        name: qa-report-${{ github.run_id }}
        path: /tmp/qa-reports/report.json
        retention-days: 7  # Keep the artifact for 7 days
