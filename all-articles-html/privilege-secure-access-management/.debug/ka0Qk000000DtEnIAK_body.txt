Configuring High Availability Without Using the High Availability Manager Tool (HaMgr) on the Secondary Server Overview This article provides instructions for setting up active-passive PostgreSQL replication without using the NPS HA Manager tool. It is recommended that you use thestandard high availability process using HA Manager, unless specifically directed to follow this article by Netwrix support. NOTE:All commands and configuration file edits must be performed with Administrator privileges. Instructions The HA Manager tool is needed to prepare the primary server for replication. It creates therepuserservice account and updates thepg_hba.conffiles to allow that user to connect from the secondary server. Default Configurations This article assumes that the following default configuration values are being used. If your environment differs, update all references to these values when following these instructions. Primary PostgreSQL port: 5432 Secondary PostgreSQL port: 5432 Replication username:repuser Replication password:!@#$Txl__23xL1297xx PostgreSQL data directory:C:\ProgramData\Stealthbits\PostgresSQL16 NOTE:Any bracketed text in this article, such as[PRIMARY_IP_ADDRESS], should be updated to the appropriate value. Verifying the Primary Server Configuration On the primary server, verify that the following settings are present inC:\ProgramData\Stealthbits\PostgresSQL16\pg_hba.conf: NOTE:This file is case sensitive. Moving the Existing Data Directory on the Secondary Server Perform the following steps on the secondary server. NOTE:Ensure there is enough disk space on the secondary server to storetwocopies of the database before performing the next steps. If this is not the case, move the existing database to a drive that has enough space. Log on to the secondary server. Stop NPS, IIS, and PostgreSQL by running the following commands:Stop-Service SbPAM* -Force Stop-Service w3svc Stop-Service postgresql-x64-16 Move the PostgreSQL data directory to your intended backup location (for example,D:\pg-backup\):if (!(Test-Path D:\pg-backup)) { New-Item -ItemType Directory D:\pg-backup } Move-Item C:\ProgramData\Stealthbits\PostgresSQL16\* D:\pg-backup\ Verify thatC:\ProgramData\Stealthbits\PostgresSQL16is empty. NOTE:The PostgreSQL, IIS, and NPS services that were stopped in this section should remain stopped. They will be started later. Creating the Base Backup on the Secondary Server Perform the following steps on the secondary server. Run the following commands in PowerShell:# Should still be stopped, but just in case! Stop-Service postgresql-x64-16 # Make sure your shell is on the drive PG is installed (default is C:) C: # Change to PG installation bin directory cd "\Program Files\Stealthbits\PostgresSQL16\bin" # Setting the password for repuser $ENV:PGPASSWORD = '!@#$Txl__23xL1297xx' & .\pg_basebackup.exe -h [PRIMARY_IP_ADDRESS] -w -D "C:\ProgramData\Stealthbits\PostgresSQL16" -P -U repuser -p 5432 --wal-method=fetch --verbose --checkpoint=fast # Unset password $ENV:PGPASSWORD = $null NOTE:Therepuseraccount only has replication rights, andpg_hba.confis configured to allow connections only from the secondary. The defaultrepuserpassword represents a low risk. However, you can change therepuserpassword by updating theappsettings.jsonfile for NPS.HaMgr on both the primary and secondary servers, as well as updating the replication connection information. Configure Replication Settings on the Secondary Perform the following steps on the secondary server. Confirm (or set) these replication settings inC:\ProgramData\Stealthbits\PostgresSQL16\postgresql.conf:listen_addresses = '*' wal_level = replica max_wal_senders = 10 wal_keep_segments = 64 hot_standby = on Addprimary_conninfotopostgresql.conf:primary_conninfo = 'host=[PRIMARY_IP_ADDRESS] port=5432 user=repuser password=!@#$Txl__23xL1297xx' Create a file namedstandby.signalin the PostgreSQL data directory. This file should remain empty. Confirm (or set) these replication settings inC:\ProgramData\Stealthbits\PostgresSQL16\pg_hba.conf:host replication repuser [PRIMARY_IP_ADDRESS]/32 md5 host all all [PRIMARY_IP_ADDRESS]/32 md5 Update database settings for NPS inC:\ProgramData\Stealthbits\PAM\Database\appsettings.db.json:NOTE:There are more settings in the file. The ones listed heremustbe set. The other settings should be leftas is.{ "Database": { "Type": "PostgreSQL", "Host": "[PRIMARY_IP_ADDRESS]", "Port": 5432 } } NOTE:There are more settings in the file. The ones listed heremustbe set. The other settings should be leftas is. Start PostgreSQL on the Secondary and Confirm Settings Start the PostgreSQL service and check the PostgreSQL logs:# Clear old logs - these came from primary so you can delete them all Remove-Item C:\ProgramData\Stealthbits\PostgresSQL16\log\* Start-Service postgresql-x64-16 # Get logs to verify server has started in standby Get-Content C:\ProgramData\Stealthbits\PostgresSQL16\log\* Start NPS and IIS:Start-Service SbPAM* Start-Service w3svc High availability should now be established. You can verify that all services are operational by logging in to the secondary server's NPS web service.